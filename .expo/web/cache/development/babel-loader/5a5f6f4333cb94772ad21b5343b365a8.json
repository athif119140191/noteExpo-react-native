{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { component } from \"./component\";\nvar Notifications = {\n  handler: component,\n  onRegister: false,\n  onRegistrationError: false,\n  onNotification: false,\n  onAction: false,\n  onRemoteFetch: false,\n  isLoaded: false,\n  isPopInitialNotification: false,\n  isPermissionsRequestPending: false,\n  permissions: {\n    alert: true,\n    badge: true,\n    sound: true\n  }\n};\n\nNotifications.callNative = function (name, params) {\n  if (typeof this.handler[name] === 'function') {\n    var _this$handler;\n\n    if (typeof params !== 'array' && typeof params !== 'object') {\n      params = [];\n    }\n\n    return (_this$handler = this.handler)[name].apply(_this$handler, _toConsumableArray(params));\n  } else {\n    return null;\n  }\n};\n\nNotifications.configure = function (options) {\n  var _this = this;\n\n  if (typeof options.onRegister !== 'undefined') {\n    this.onRegister = options.onRegister;\n  }\n\n  if (typeof options.onRegistrationError !== 'undefined') {\n    this.onRegistrationError = options.onRegistrationError;\n  }\n\n  if (typeof options.onNotification !== 'undefined') {\n    this.onNotification = options.onNotification;\n  }\n\n  if (typeof options.onAction !== 'undefined') {\n    this.onAction = options.onAction;\n  }\n\n  if (typeof options.permissions !== 'undefined') {\n    this.permissions = options.permissions;\n  }\n\n  if (typeof options.onRemoteFetch !== 'undefined') {\n    this.onRemoteFetch = options.onRemoteFetch;\n  }\n\n  if (this.isLoaded === false) {\n    this._onRegister = this._onRegister.bind(this);\n    this._onRegistrationError = this._onRegistrationError.bind(this);\n    this._onNotification = this._onNotification.bind(this);\n    this._onRemoteFetch = this._onRemoteFetch.bind(this);\n    this._onAction = this._onAction.bind(this);\n    this.callNative('addEventListener', ['register', this._onRegister]);\n    this.callNative('addEventListener', ['registrationError', this._onRegistrationError]);\n    this.callNative('addEventListener', ['notification', this._onNotification]);\n    this.callNative('addEventListener', ['localNotification', this._onNotification]);\n    Platform.OS === 'android' ? this.callNative('addEventListener', ['action', this._onAction]) : null;\n    Platform.OS === 'android' ? this.callNative('addEventListener', ['remoteFetch', this._onRemoteFetch]) : null;\n    this.isLoaded = true;\n  }\n\n  var handlePopInitialNotification = function handlePopInitialNotification(state) {\n    if ('active' !== state) {\n      return;\n    }\n\n    if (options.popInitialNotification === undefined || options.popInitialNotification === true) {\n      _this.popInitialNotification(function (firstNotification) {\n        if (this.isPopInitialNotification) {\n          return;\n        }\n\n        this.isPopInitialNotification = true;\n\n        if (!firstNotification || false === firstNotification.userInteraction) {\n          return;\n        }\n\n        this._onNotification(firstNotification, true);\n      }.bind(_this));\n    }\n  };\n\n  AppState.addEventListener('change', handlePopInitialNotification.bind(this));\n  handlePopInitialNotification(AppState.currentState);\n\n  if (options.requestPermissions !== false) {\n    this._requestPermissions();\n  }\n};\n\nNotifications.unregister = function () {\n  this.callNative('removeEventListener', ['register', this._onRegister]);\n  this.callNative('removeEventListener', ['registrationError', this._onRegistrationError]);\n  this.callNative('removeEventListener', ['notification', this._onNotification]);\n  this.callNative('removeEventListener', ['localNotification', this._onNotification]);\n  Platform.OS === 'android' ? this.callNative('removeEventListener', ['action', this._onAction]) : null;\n  Platform.OS === 'android' ? this.callNative('removeEventListener', ['remoteFetch', this._onRemoteFetch]) : null;\n  this.isLoaded = false;\n};\n\nNotifications.localNotification = function (_ref) {\n  var details = _extends({}, _ref);\n\n  if ('android' === Platform.OS && details && !details.channelId) {\n    console.warn('No channel id passed, notifications may not work.');\n  }\n\n  if (details && typeof details.id === 'number') {\n    if (isNaN(details.id)) {\n      console.warn('NaN value has been passed as id');\n      delete details.id;\n    } else {\n      details.id = '' + details.id;\n    }\n  }\n\n  if (Platform.OS === 'ios') {\n    var soundName = details.soundName ? details.soundName : 'default';\n\n    if (details.hasOwnProperty('playSound') && !details.playSound) {\n      soundName = '';\n    }\n\n    if (details.picture) {\n      details.userInfo = details.userInfo || {};\n      details.userInfo.image = details.picture;\n    }\n\n    this.handler.addNotificationRequest({\n      id: !details.id ? Math.floor(Math.random() * Math.pow(2, 32)).toString() : details.id,\n      title: details.title,\n      subtitle: details.subtitle,\n      body: details.message,\n      badge: details.number,\n      sound: soundName,\n      isSilent: details.playSound === false,\n      category: details.category,\n      userInfo: details.userInfo\n    });\n  } else {\n    if (details && typeof details.number === 'number') {\n      if (isNaN(details.number)) {\n        console.warn('NaN value has been passed as number');\n        delete details.number;\n      } else {\n        details.number = '' + details.number;\n      }\n    }\n\n    if (details && typeof details.shortcutId === 'number') {\n      if (isNaN(details.shortcutId)) {\n        console.warn('NaN value has been passed as shortcutId');\n        delete details.shortcutId;\n      } else {\n        details.shortcutId = '' + details.shortcutId;\n      }\n    }\n\n    if (details && Array.isArray(details.actions)) {\n      details.actions = JSON.stringify(details.actions);\n    }\n\n    if (details.userInfo) {\n      details.userInfo = JSON.stringify(details.userInfo);\n    }\n\n    if (details.picture && !details.bigPictureUrl) {\n      details.bigPictureUrl = details.picture;\n    }\n\n    this.handler.presentLocalNotification(details);\n  }\n};\n\nNotifications.localNotificationSchedule = function (_ref2) {\n  var details = _extends({}, _ref2);\n\n  if ('android' === Platform.os && details && !details.channelId) {\n    console.warn('No channel id passed, notifications may not work.');\n  }\n\n  if (details && typeof details.id === 'number') {\n    if (isNaN(details.id)) {\n      console.warn('NaN value has been passed as id');\n      delete details.id;\n    } else {\n      details.id = '' + details.id;\n    }\n  }\n\n  if (Platform.OS === 'ios') {\n    var soundName = details.soundName ? details.soundName : 'default';\n\n    if (details.hasOwnProperty('playSound') && !details.playSound) {\n      soundName = '';\n    }\n\n    if (details.picture) {\n      details.userInfo = details.userInfo || {};\n      details.userInfo.image = details.picture;\n    }\n\n    var repeatsComponent = {\n      second: ['minute', 'hour', 'day', 'week', 'month'].includes(details.repeatType),\n      minute: ['hour', 'day', 'week', 'month'].includes(details.repeatType),\n      hour: ['day', 'week', 'month'].includes(details.repeatType),\n      day: details.repeatType == \"month\",\n      dayOfWeek: details.repeatType == \"week\"\n    };\n    var iosDetails = {\n      id: !details.id ? Math.floor(Math.random() * Math.pow(2, 32)).toString() : details.id,\n      fireDate: details.date.toISOString(),\n      title: details.title,\n      subtitle: details.subtitle,\n      body: details.message,\n      sound: soundName,\n      isSilent: details.playSound === false,\n      category: details.category,\n      userInfo: details.userInfo,\n      repeats: ['minute', 'hour', 'day', 'week', 'month'].includes(details.repeatType),\n      repeatsComponent: repeatsComponent\n    };\n\n    if (details.number) {\n      iosDetails.badge = parseInt(details.number, 10);\n    }\n\n    this.handler.addNotificationRequest(iosDetails);\n  } else {\n    if (details && typeof details.number === 'number') {\n      if (isNaN(details.number)) {\n        console.warn('NaN value has been passed as number');\n        delete details.number;\n      } else {\n        details.number = '' + details.number;\n      }\n    }\n\n    if (details && typeof details.shortcutId === 'number') {\n      if (isNaN(details.shortcutId)) {\n        console.warn('NaN value has been passed as shortcutId');\n        delete details.shortcutId;\n      } else {\n        details.shortcutId = '' + details.shortcutId;\n      }\n    }\n\n    if (details && Array.isArray(details.actions)) {\n      details.actions = JSON.stringify(details.actions);\n    }\n\n    if (details.userInfo) {\n      details.userInfo = JSON.stringify(details.userInfo);\n    }\n\n    if (details.picture && !details.bigPictureUrl) {\n      details.bigPictureUrl = details.picture;\n    }\n\n    details.fireDate = details.date.getTime();\n    delete details.date;\n    this.handler.scheduleLocalNotification(details);\n  }\n};\n\nNotifications._onRegister = function (token) {\n  if (this.onRegister !== false) {\n    this.onRegister({\n      token: token,\n      os: Platform.OS\n    });\n  }\n};\n\nNotifications._onRegistrationError = function (err) {\n  if (this.onRegistrationError !== false) {\n    this.onRegistrationError(err);\n  }\n};\n\nNotifications._onRemoteFetch = function (notificationData) {\n  if (this.onRemoteFetch !== false) {\n    this.onRemoteFetch(notificationData);\n  }\n};\n\nNotifications._onAction = function (_ref3) {\n  var notification = _extends({}, _ref3);\n\n  if (typeof notification.data === 'string') {\n    try {\n      notification.data = JSON.parse(notificationData.data);\n    } catch (e) {}\n  }\n\n  this.onAction(notification);\n};\n\nNotifications._transformNotificationObject = function (data) {\n  var isFromBackground = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!data) {\n    return;\n  }\n\n  if (isFromBackground === null) {\n    isFromBackground = data.foreground === false || AppState.currentState === 'background' || AppState.currentState === 'unknown';\n  }\n\n  var _notification;\n\n  if (Platform.OS === 'ios') {\n    var notifData = data.getData();\n    _notification = {\n      id: notifData == null ? void 0 : notifData.id,\n      foreground: !isFromBackground,\n      userInteraction: (notifData == null ? void 0 : notifData.userInteraction) === 1 || false,\n      message: data.getMessage(),\n      data: notifData,\n      badge: data.getBadgeCount(),\n      title: data.getTitle(),\n      subtitle: data.getSubtitle(),\n      soundName: data.getSound(),\n      fireDate: Date.parse(data._fireDate),\n      action: data.getActionIdentifier(),\n      reply_text: data.getUserText(),\n      finish: function finish(res) {\n        return data.finish(res);\n      }\n    };\n\n    if (isNaN(_notification.fireDate)) {\n      delete _notification.fireDate;\n    }\n  } else {\n    _notification = _objectSpread({\n      foreground: !isFromBackground,\n      finish: function finish() {}\n    }, data);\n\n    if (typeof _notification.data === 'string') {\n      try {\n        _notification.data = JSON.parse(_notification.data);\n      } catch (e) {}\n    }\n\n    if (typeof _notification.userInfo === 'string') {\n      try {\n        _notification.userInfo = JSON.parse(_notification.userInfo);\n      } catch (e) {}\n    }\n\n    _notification.data = _objectSpread(_objectSpread({}, typeof _notification.userInfo === 'object' ? _notification.userInfo : {}), typeof _notification.data === 'object' ? _notification.data : {});\n    delete _notification.userInfo;\n    delete _notification.notificationId;\n  }\n\n  return _notification;\n};\n\nNotifications._onNotification = function (data) {\n  var initialNotification = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (this.onNotification !== false) {\n    var notification = data;\n\n    if (!initialNotification) {\n      notification = this._transformNotificationObject(data);\n    }\n\n    this.onNotification(notification);\n  }\n};\n\nNotifications._onPermissionResult = function () {\n  this.isPermissionsRequestPending = false;\n};\n\nNotifications._requestPermissions = function () {\n  if (Platform.OS === 'ios') {\n    if (this.isPermissionsRequestPending === false) {\n      this.isPermissionsRequestPending = true;\n      return this.callNative('requestPermissions', [this.permissions]).then(this._onPermissionResult.bind(this)).catch(this._onPermissionResult.bind(this));\n    }\n  } else if (Platform.OS === 'android') {\n    return this.callNative('requestPermissions', []);\n  }\n};\n\nNotifications.requestPermissions = function () {\n  if (Platform.OS === 'ios') {\n    return this.callNative('requestPermissions', [this.permissions]);\n  } else if (Platform.OS === 'android') {\n    return this.callNative('requestPermissions', []);\n  }\n};\n\nNotifications.subscribeToTopic = function () {\n  return this.callNative('subscribeToTopic', arguments);\n};\n\nNotifications.unsubscribeFromTopic = function () {\n  return this.callNative('unsubscribeFromTopic', arguments);\n};\n\nNotifications.presentLocalNotification = function () {\n  return this.callNative('presentLocalNotification', arguments);\n};\n\nNotifications.scheduleLocalNotification = function () {\n  return this.callNative('scheduleLocalNotification', arguments);\n};\n\nNotifications.cancelLocalNotifications = function (userInfo) {\n  console.warn('This method is now deprecated, please use `cancelLocalNotification` (remove the ending `s`).');\n  return this.cancelLocalNotification(userInfo);\n};\n\nNotifications.cancelLocalNotification = function (notificationId) {\n  if (typeof notificationId === 'object') {\n    var _notificationId;\n\n    notificationId = (_notificationId = notificationId) == null ? void 0 : _notificationId.id;\n  }\n\n  if (typeof notificationId === 'number') {\n    notificationId = '' + notificationId;\n  }\n\n  if (Platform.OS === 'ios') {\n    return this.callNative('removePendingNotificationRequests', [[notificationId]]);\n  } else {\n    return this.callNative('cancelLocalNotification', [notificationId]);\n  }\n};\n\nNotifications.clearLocalNotification = function () {\n  return this.callNative('clearLocalNotification', arguments);\n};\n\nNotifications.cancelAllLocalNotifications = function () {\n  if (Platform.OS === 'ios') {\n    return this.callNative('removeAllPendingNotificationRequests', arguments);\n  } else if (Platform.OS === 'android') {\n    return this.callNative('cancelAllLocalNotifications', arguments);\n  }\n};\n\nNotifications.setApplicationIconBadgeNumber = function () {\n  return this.callNative('setApplicationIconBadgeNumber', arguments);\n};\n\nNotifications.getApplicationIconBadgeNumber = function () {\n  return this.callNative('getApplicationIconBadgeNumber', arguments);\n};\n\nNotifications.popInitialNotification = function (handler) {\n  var _this2 = this;\n\n  this.callNative('getInitialNotification').then(function (result) {\n    handler(_this2._transformNotificationObject(result, true));\n  });\n};\n\nNotifications.checkPermissions = function () {\n  return this.callNative('checkPermissions', arguments);\n};\n\nNotifications.abandonPermissions = function () {\n  return this.callNative('abandonPermissions', arguments);\n};\n\nNotifications.clearAllNotifications = function () {\n  return this.callNative('clearAllNotifications', arguments);\n};\n\nNotifications.removeAllDeliveredNotifications = function () {\n  return this.callNative('removeAllDeliveredNotifications', arguments);\n};\n\nNotifications.getDeliveredNotifications = function () {\n  return this.callNative('getDeliveredNotifications', arguments);\n};\n\nNotifications.getScheduledLocalNotifications = function (callback) {\n  var mapNotifications = function mapNotifications(notifications) {\n    var mappedNotifications = [];\n\n    if ((notifications == null ? void 0 : notifications.length) > 0) {\n      if (Platform.OS === 'ios') {\n        mappedNotifications = notifications.map(function (notif) {\n          return {\n            soundName: notif == null ? void 0 : notif.sound,\n            id: notif.id,\n            date: notif.date ? new Date(notif.date) : null,\n            number: notif == null ? void 0 : notif.badge,\n            message: notif == null ? void 0 : notif.body,\n            title: notif == null ? void 0 : notif.title,\n            data: notif == null ? void 0 : notif.userInfo\n          };\n        });\n      } else if (Platform.OS === 'android') {\n        mappedNotifications = notifications.map(function (notif) {\n          try {\n            notif.data = JSON.parse(notif.data);\n          } catch (e) {}\n\n          return {\n            soundName: notif.soundName,\n            repeatInterval: notif.repeatInterval,\n            id: notif.id,\n            date: new Date(notif.date),\n            number: notif.number,\n            message: notif.message,\n            title: notif.title,\n            data: notif.data\n          };\n        });\n      }\n    }\n\n    callback(mappedNotifications);\n  };\n\n  if (Platform.OS === 'ios') {\n    return this.callNative('getPendingNotificationRequests', [mapNotifications]);\n  } else {\n    return this.callNative('getScheduledLocalNotifications', [mapNotifications]);\n  }\n};\n\nNotifications.removeDeliveredNotifications = function () {\n  return this.callNative('removeDeliveredNotifications', arguments);\n};\n\nNotifications.invokeApp = function () {\n  return this.callNative('invokeApp', arguments);\n};\n\nNotifications.getChannels = function () {\n  return this.callNative('getChannels', arguments);\n};\n\nNotifications.channelExists = function () {\n  return this.callNative('channelExists', arguments);\n};\n\nNotifications.createChannel = function () {\n  return this.callNative('createChannel', arguments);\n};\n\nNotifications.channelBlocked = function () {\n  return this.callNative('channelBlocked', arguments);\n};\n\nNotifications.deleteChannel = function () {\n  return this.callNative('deleteChannel', arguments);\n};\n\nNotifications.setNotificationCategories = function () {\n  return this.callNative('setNotificationCategories', arguments);\n};\n\nNotifications.Importance = Object.freeze({\n  DEFAULT: 3,\n  HIGH: 4,\n  LOW: 2,\n  MIN: 1,\n  NONE: 0,\n  UNSPECIFIED: -1000\n});\nmodule.exports = Notifications;","map":{"version":3,"sources":["D:/ALPro/Smt 6/PAM/noteExpo/node_modules/react-native-push-notification/index.js"],"names":["component","Notifications","handler","onRegister","onRegistrationError","onNotification","onAction","onRemoteFetch","isLoaded","isPopInitialNotification","isPermissionsRequestPending","permissions","alert","badge","sound","callNative","name","params","configure","options","_onRegister","bind","_onRegistrationError","_onNotification","_onRemoteFetch","_onAction","Platform","OS","handlePopInitialNotification","state","popInitialNotification","undefined","firstNotification","userInteraction","AppState","addEventListener","currentState","requestPermissions","_requestPermissions","unregister","localNotification","details","channelId","console","warn","id","isNaN","soundName","hasOwnProperty","playSound","picture","userInfo","image","addNotificationRequest","Math","floor","random","pow","toString","title","subtitle","body","message","number","isSilent","category","shortcutId","Array","isArray","actions","JSON","stringify","bigPictureUrl","presentLocalNotification","localNotificationSchedule","os","repeatsComponent","second","includes","repeatType","minute","hour","day","dayOfWeek","iosDetails","fireDate","date","toISOString","repeats","parseInt","getTime","scheduleLocalNotification","token","err","notificationData","notification","data","parse","e","_transformNotificationObject","isFromBackground","foreground","_notification","notifData","getData","getMessage","getBadgeCount","getTitle","getSubtitle","getSound","Date","_fireDate","action","getActionIdentifier","reply_text","getUserText","finish","res","notificationId","initialNotification","_onPermissionResult","then","catch","subscribeToTopic","arguments","unsubscribeFromTopic","cancelLocalNotifications","cancelLocalNotification","clearLocalNotification","cancelAllLocalNotifications","setApplicationIconBadgeNumber","getApplicationIconBadgeNumber","result","checkPermissions","abandonPermissions","clearAllNotifications","removeAllDeliveredNotifications","getDeliveredNotifications","getScheduledLocalNotifications","callback","mapNotifications","notifications","mappedNotifications","length","map","notif","repeatInterval","removeDeliveredNotifications","invokeApp","getChannels","channelExists","createChannel","channelBlocked","deleteChannel","setNotificationCategories","Importance","Object","freeze","DEFAULT","HIGH","LOW","MIN","NONE","UNSPECIFIED","module","exports"],"mappings":"AAIA;;;;;;;;;;;;AAGA,SAASA,SAAT;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAEF,SADW;AAEpBG,EAAAA,UAAU,EAAE,KAFQ;AAGpBC,EAAAA,mBAAmB,EAAE,KAHD;AAIpBC,EAAAA,cAAc,EAAE,KAJI;AAKpBC,EAAAA,QAAQ,EAAE,KALU;AAMpBC,EAAAA,aAAa,EAAE,KANK;AAOpBC,EAAAA,QAAQ,EAAE,KAPU;AAQpBC,EAAAA,wBAAwB,EAAE,KARN;AAUpBC,EAAAA,2BAA2B,EAAE,KAVT;AAYpBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE,IADI;AAEXC,IAAAA,KAAK,EAAE,IAFI;AAGXC,IAAAA,KAAK,EAAE;AAHI;AAZO,CAAtB;;AAmBAb,aAAa,CAACc,UAAd,GAA2B,UAASC,IAAT,EAAeC,MAAf,EAAuB;AAChD,MAAK,OAAO,KAAKf,OAAL,CAAac,IAAb,CAAP,KAA8B,UAAnC,EAAgD;AAAA;;AAC9C,QAAK,OAAOC,MAAP,KAAkB,OAAlB,IACF,OAAOA,MAAP,KAAkB,QADrB,EACgC;AAC9BA,MAAAA,MAAM,GAAG,EAAT;AACD;;AAED,WAAO,sBAAKf,OAAL,EAAac,IAAb,0CAAsBC,MAAtB,EAAP;AACD,GAPD,MAOO;AACL,WAAO,IAAP;AACD;AACF,CAXD;;AAuBAhB,aAAa,CAACiB,SAAd,GAA0B,UAASC,OAAT,EAAkB;AAAA;;AAC1C,MAAK,OAAOA,OAAO,CAAChB,UAAf,KAA8B,WAAnC,EAAiD;AAC/C,SAAKA,UAAL,GAAkBgB,OAAO,CAAChB,UAA1B;AACD;;AAED,MAAK,OAAOgB,OAAO,CAACf,mBAAf,KAAuC,WAA5C,EAA0D;AACxD,SAAKA,mBAAL,GAA2Be,OAAO,CAACf,mBAAnC;AACD;;AAED,MAAK,OAAOe,OAAO,CAACd,cAAf,KAAkC,WAAvC,EAAqD;AACnD,SAAKA,cAAL,GAAsBc,OAAO,CAACd,cAA9B;AACD;;AAED,MAAK,OAAOc,OAAO,CAACb,QAAf,KAA4B,WAAjC,EAA+C;AAC7C,SAAKA,QAAL,GAAgBa,OAAO,CAACb,QAAxB;AACD;;AAED,MAAK,OAAOa,OAAO,CAACR,WAAf,KAA+B,WAApC,EAAkD;AAChD,SAAKA,WAAL,GAAmBQ,OAAO,CAACR,WAA3B;AACD;;AAED,MAAK,OAAOQ,OAAO,CAACZ,aAAf,KAAiC,WAAtC,EAAoD;AAClD,SAAKA,aAAL,GAAqBY,OAAO,CAACZ,aAA7B;AACD;;AAED,MAAK,KAAKC,QAAL,KAAkB,KAAvB,EAA+B;AAC7B,SAAKY,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKI,SAAL,GAAiB,KAAKA,SAAL,CAAeJ,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKN,UAAL,CAAiB,kBAAjB,EAAqC,CAAE,UAAF,EAAc,KAAKK,WAAnB,CAArC;AACA,SAAKL,UAAL,CAAiB,kBAAjB,EAAqC,CAAE,mBAAF,EAAuB,KAAKO,oBAA5B,CAArC;AACA,SAAKP,UAAL,CAAiB,kBAAjB,EAAqC,CAAE,cAAF,EAAkB,KAAKQ,eAAvB,CAArC;AACA,SAAKR,UAAL,CAAiB,kBAAjB,EAAqC,CAAE,mBAAF,EAAuB,KAAKQ,eAA5B,CAArC;AACAG,IAAAA,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,KAAKZ,UAAL,CAAiB,kBAAjB,EAAqC,CAAE,QAAF,EAAY,KAAKU,SAAjB,CAArC,CAA5B,GAAkG,IAAlG;AACAC,IAAAA,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,KAAKZ,UAAL,CAAiB,kBAAjB,EAAqC,CAAE,aAAF,EAAiB,KAAKS,cAAtB,CAArC,CAA5B,GAA4G,IAA5G;AAEA,SAAKhB,QAAL,GAAgB,IAAhB;AACD;;AAED,MAAMoB,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,KAAD,EAAW;AAC9C,QAAG,aAAaA,KAAhB,EAAuB;AACrB;AACD;;AAED,QAAIV,OAAO,CAACW,sBAAR,KAAmCC,SAAnC,IAAgDZ,OAAO,CAACW,sBAAR,KAAmC,IAAvF,EAA6F;AAC3F,MAAA,KAAI,CAACA,sBAAL,CAA4B,UAASE,iBAAT,EAA4B;AACtD,YAAG,KAAKvB,wBAAR,EAAkC;AAChC;AACD;;AAED,aAAKA,wBAAL,GAAgC,IAAhC;;AAEA,YAAI,CAACuB,iBAAD,IAAsB,UAAUA,iBAAiB,CAACC,eAAtD,EAAuE;AACrE;AACD;;AAED,aAAKV,eAAL,CAAqBS,iBAArB,EAAwC,IAAxC;AACD,OAZ2B,CAY1BX,IAZ0B,CAYrB,KAZqB,CAA5B;AAaD;AACF,GApBD;;AAsBAa,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoCP,4BAA4B,CAACP,IAA7B,CAAkC,IAAlC,CAApC;AAEAO,EAAAA,4BAA4B,CAACM,QAAQ,CAACE,YAAV,CAA5B;;AAEA,MAAKjB,OAAO,CAACkB,kBAAR,KAA+B,KAApC,EAA4C;AAC1C,SAAKC,mBAAL;AACD;AACF,CAtED;;AAyEArC,aAAa,CAACsC,UAAd,GAA2B,YAAW;AACpC,OAAKxB,UAAL,CAAiB,qBAAjB,EAAwC,CAAE,UAAF,EAAc,KAAKK,WAAnB,CAAxC;AACA,OAAKL,UAAL,CAAiB,qBAAjB,EAAwC,CAAE,mBAAF,EAAuB,KAAKO,oBAA5B,CAAxC;AACA,OAAKP,UAAL,CAAiB,qBAAjB,EAAwC,CAAE,cAAF,EAAkB,KAAKQ,eAAvB,CAAxC;AACA,OAAKR,UAAL,CAAiB,qBAAjB,EAAwC,CAAE,mBAAF,EAAuB,KAAKQ,eAA5B,CAAxC;AACAG,EAAAA,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,KAAKZ,UAAL,CAAiB,qBAAjB,EAAwC,CAAE,QAAF,EAAY,KAAKU,SAAjB,CAAxC,CAA5B,GAAqG,IAArG;AACAC,EAAAA,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,KAAKZ,UAAL,CAAiB,qBAAjB,EAAwC,CAAE,aAAF,EAAiB,KAAKS,cAAtB,CAAxC,CAA5B,GAA+G,IAA/G;AACA,OAAKhB,QAAL,GAAgB,KAAhB;AACD,CARD;;AAkBAP,aAAa,CAACuC,iBAAd,GAAkC,gBAAuB;AAAA,MAAVC,OAAU;;AACvD,MAAI,cAAcf,QAAQ,CAACC,EAAvB,IAA6Bc,OAA7B,IAAwC,CAACA,OAAO,CAACC,SAArD,EAAgE;AAC9DC,IAAAA,OAAO,CAACC,IAAR,CAAa,mDAAb;AACD;;AAED,MAAIH,OAAO,IAAI,OAAOA,OAAO,CAACI,EAAf,KAAsB,QAArC,EAA+C;AAC7C,QAAIC,KAAK,CAACL,OAAO,CAACI,EAAT,CAAT,EAAuB;AACrBF,MAAAA,OAAO,CAACC,IAAR,CAAa,iCAAb;AACA,aAAOH,OAAO,CAACI,EAAf;AACD,KAHD,MAIK;AACHJ,MAAAA,OAAO,CAACI,EAAR,GAAa,KAAKJ,OAAO,CAACI,EAA1B;AACD;AACF;;AAED,MAAInB,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AAGzB,QAAIoB,SAAS,GAAGN,OAAO,CAACM,SAAR,GAAoBN,OAAO,CAACM,SAA5B,GAAwC,SAAxD;;AAEA,QAAIN,OAAO,CAACO,cAAR,CAAuB,WAAvB,KAAuC,CAACP,OAAO,CAACQ,SAApD,EAA+D;AAC7DF,MAAAA,SAAS,GAAG,EAAZ;AACD;;AAED,QAAGN,OAAO,CAACS,OAAX,EAAoB;AAClBT,MAAAA,OAAO,CAACU,QAAR,GAAmBV,OAAO,CAACU,QAAR,IAAoB,EAAvC;AACAV,MAAAA,OAAO,CAACU,QAAR,CAAiBC,KAAjB,GAAyBX,OAAO,CAACS,OAAjC;AACD;;AAID,SAAKhD,OAAL,CAAamD,sBAAb,CAAoC;AAClCR,MAAAA,EAAE,EAAG,CAACJ,OAAO,CAACI,EAAT,GAAcS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACG,GAAL,CAAS,CAAT,EAAY,EAAZ,CAA3B,EAA4CC,QAA5C,EAAd,GAAuEjB,OAAO,CAACI,EADlD;AAElCc,MAAAA,KAAK,EAAElB,OAAO,CAACkB,KAFmB;AAGlCC,MAAAA,QAAQ,EAAEnB,OAAO,CAACmB,QAHgB;AAIlCC,MAAAA,IAAI,EAAEpB,OAAO,CAACqB,OAJoB;AAKlCjD,MAAAA,KAAK,EAAE4B,OAAO,CAACsB,MALmB;AAMlCjD,MAAAA,KAAK,EAAEiC,SAN2B;AAOlCiB,MAAAA,QAAQ,EAAEvB,OAAO,CAACQ,SAAR,KAAsB,KAPE;AAQlCgB,MAAAA,QAAQ,EAAExB,OAAO,CAACwB,QARgB;AASlCd,MAAAA,QAAQ,EAAEV,OAAO,CAACU;AATgB,KAApC;AAWD,GA3BD,MA2BO;AACL,QAAIV,OAAO,IAAI,OAAOA,OAAO,CAACsB,MAAf,KAA0B,QAAzC,EAAmD;AACjD,UAAGjB,KAAK,CAACL,OAAO,CAACsB,MAAT,CAAR,EAA0B;AACxBpB,QAAAA,OAAO,CAACC,IAAR,CAAa,qCAAb;AACA,eAAOH,OAAO,CAACsB,MAAf;AACD,OAHD,MAIK;AACHtB,QAAAA,OAAO,CAACsB,MAAR,GAAiB,KAAKtB,OAAO,CAACsB,MAA9B;AACD;AACF;;AAED,QAAItB,OAAO,IAAI,OAAOA,OAAO,CAACyB,UAAf,KAA8B,QAA7C,EAAuD;AACrD,UAAGpB,KAAK,CAACL,OAAO,CAACyB,UAAT,CAAR,EAA8B;AAC5BvB,QAAAA,OAAO,CAACC,IAAR,CAAa,yCAAb;AACA,eAAOH,OAAO,CAACyB,UAAf;AACD,OAHD,MAIK;AACHzB,QAAAA,OAAO,CAACyB,UAAR,GAAqB,KAAKzB,OAAO,CAACyB,UAAlC;AACD;AACF;;AAED,QAAGzB,OAAO,IAAI0B,KAAK,CAACC,OAAN,CAAc3B,OAAO,CAAC4B,OAAtB,CAAd,EAA8C;AAC5C5B,MAAAA,OAAO,CAAC4B,OAAR,GAAkBC,IAAI,CAACC,SAAL,CAAe9B,OAAO,CAAC4B,OAAvB,CAAlB;AACD;;AAED,QAAG5B,OAAO,CAACU,QAAX,EAAqB;AACnBV,MAAAA,OAAO,CAACU,QAAR,GAAmBmB,IAAI,CAACC,SAAL,CAAe9B,OAAO,CAACU,QAAvB,CAAnB;AACD;;AAED,QAAGV,OAAO,CAACS,OAAR,IAAmB,CAACT,OAAO,CAAC+B,aAA/B,EAA8C;AAC5C/B,MAAAA,OAAO,CAAC+B,aAAR,GAAwB/B,OAAO,CAACS,OAAhC;AACD;;AAED,SAAKhD,OAAL,CAAauE,wBAAb,CAAsChC,OAAtC;AACD;AACF,CA7ED;;AAoFAxC,aAAa,CAACyE,yBAAd,GAA0C,iBAAuB;AAAA,MAAVjC,OAAU;;AAC/D,MAAI,cAAcf,QAAQ,CAACiD,EAAvB,IAA6BlC,OAA7B,IAAwC,CAACA,OAAO,CAACC,SAArD,EAAgE;AAC9DC,IAAAA,OAAO,CAACC,IAAR,CAAa,mDAAb;AACD;;AAED,MAAIH,OAAO,IAAI,OAAOA,OAAO,CAACI,EAAf,KAAsB,QAArC,EAA+C;AAC7C,QAAGC,KAAK,CAACL,OAAO,CAACI,EAAT,CAAR,EAAsB;AACpBF,MAAAA,OAAO,CAACC,IAAR,CAAa,iCAAb;AACA,aAAOH,OAAO,CAACI,EAAf;AACD,KAHD,MAIK;AACHJ,MAAAA,OAAO,CAACI,EAAR,GAAa,KAAKJ,OAAO,CAACI,EAA1B;AACD;AACF;;AAED,MAAInB,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,QAAIoB,SAAS,GAAGN,OAAO,CAACM,SAAR,GAAoBN,OAAO,CAACM,SAA5B,GAAwC,SAAxD;;AAEA,QAAIN,OAAO,CAACO,cAAR,CAAuB,WAAvB,KAAuC,CAACP,OAAO,CAACQ,SAApD,EAA+D;AAC7DF,MAAAA,SAAS,GAAG,EAAZ;AACD;;AAED,QAAGN,OAAO,CAACS,OAAX,EAAoB;AAClBT,MAAAA,OAAO,CAACU,QAAR,GAAmBV,OAAO,CAACU,QAAR,IAAoB,EAAvC;AACAV,MAAAA,OAAO,CAACU,QAAR,CAAiBC,KAAjB,GAAyBX,OAAO,CAACS,OAAjC;AACD;;AAED,QAAM0B,gBAAgB,GAAG;AACvBC,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,MAAX,EAAmB,KAAnB,EAA0B,MAA1B,EAAkC,OAAlC,EAA2CC,QAA3C,CAAoDrC,OAAO,CAACsC,UAA5D,CADe;AAEvBC,MAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,EAAwB,OAAxB,EAAiCF,QAAjC,CAA0CrC,OAAO,CAACsC,UAAlD,CAFe;AAGvBE,MAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,EAAyBH,QAAzB,CAAkCrC,OAAO,CAACsC,UAA1C,CAHiB;AAIvBG,MAAAA,GAAG,EAAEzC,OAAO,CAACsC,UAAR,IAAsB,OAJJ;AAKvBI,MAAAA,SAAS,EAAE1C,OAAO,CAACsC,UAAR,IAAsB;AALV,KAAzB;AAQA,QAAMK,UAAU,GAAG;AACjBvC,MAAAA,EAAE,EAAG,CAACJ,OAAO,CAACI,EAAT,GAAcS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACG,GAAL,CAAS,CAAT,EAAY,EAAZ,CAA3B,EAA4CC,QAA5C,EAAd,GAAuEjB,OAAO,CAACI,EADnE;AAEjBwC,MAAAA,QAAQ,EAAE5C,OAAO,CAAC6C,IAAR,CAAaC,WAAb,EAFO;AAGjB5B,MAAAA,KAAK,EAAElB,OAAO,CAACkB,KAHE;AAIjBC,MAAAA,QAAQ,EAAEnB,OAAO,CAACmB,QAJD;AAKjBC,MAAAA,IAAI,EAAEpB,OAAO,CAACqB,OALG;AAMjBhD,MAAAA,KAAK,EAAEiC,SANU;AAOjBiB,MAAAA,QAAQ,EAAEvB,OAAO,CAACQ,SAAR,KAAsB,KAPf;AAQjBgB,MAAAA,QAAQ,EAAExB,OAAO,CAACwB,QARD;AASjBd,MAAAA,QAAQ,EAAEV,OAAO,CAACU,QATD;AAUjBqC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX,EAAmB,KAAnB,EAA0B,MAA1B,EAAkC,OAAlC,EAA2CV,QAA3C,CAAoDrC,OAAO,CAACsC,UAA5D,CAVQ;AAWjBH,MAAAA,gBAAgB,EAAEA;AAXD,KAAnB;;AAcA,QAAInC,OAAO,CAACsB,MAAZ,EAAoB;AAClBqB,MAAAA,UAAU,CAACvE,KAAX,GAAmB4E,QAAQ,CAAChD,OAAO,CAACsB,MAAT,EAAiB,EAAjB,CAA3B;AACD;;AAED,SAAK7D,OAAL,CAAamD,sBAAb,CAAoC+B,UAApC;AACD,GAvCD,MAuCO;AACL,QAAI3C,OAAO,IAAI,OAAOA,OAAO,CAACsB,MAAf,KAA0B,QAAzC,EAAmD;AACjD,UAAIjB,KAAK,CAACL,OAAO,CAACsB,MAAT,CAAT,EAA2B;AACzBpB,QAAAA,OAAO,CAACC,IAAR,CAAa,qCAAb;AACA,eAAOH,OAAO,CAACsB,MAAf;AACD,OAHD,MAIK;AACHtB,QAAAA,OAAO,CAACsB,MAAR,GAAiB,KAAKtB,OAAO,CAACsB,MAA9B;AACD;AACF;;AAED,QAAItB,OAAO,IAAI,OAAOA,OAAO,CAACyB,UAAf,KAA8B,QAA7C,EAAuD;AACrD,UAAIpB,KAAK,CAACL,OAAO,CAACyB,UAAT,CAAT,EAA+B;AAC7BvB,QAAAA,OAAO,CAACC,IAAR,CAAa,yCAAb;AACA,eAAOH,OAAO,CAACyB,UAAf;AACD,OAHD,MAIK;AACHzB,QAAAA,OAAO,CAACyB,UAAR,GAAqB,KAAKzB,OAAO,CAACyB,UAAlC;AACD;AACF;;AAED,QAAGzB,OAAO,IAAI0B,KAAK,CAACC,OAAN,CAAc3B,OAAO,CAAC4B,OAAtB,CAAd,EAA8C;AAC5C5B,MAAAA,OAAO,CAAC4B,OAAR,GAAkBC,IAAI,CAACC,SAAL,CAAe9B,OAAO,CAAC4B,OAAvB,CAAlB;AACD;;AAED,QAAG5B,OAAO,CAACU,QAAX,EAAqB;AACnBV,MAAAA,OAAO,CAACU,QAAR,GAAmBmB,IAAI,CAACC,SAAL,CAAe9B,OAAO,CAACU,QAAvB,CAAnB;AACD;;AAED,QAAGV,OAAO,CAACS,OAAR,IAAmB,CAACT,OAAO,CAAC+B,aAA/B,EAA8C;AAC5C/B,MAAAA,OAAO,CAAC+B,aAAR,GAAwB/B,OAAO,CAACS,OAAhC;AACD;;AAEDT,IAAAA,OAAO,CAAC4C,QAAR,GAAmB5C,OAAO,CAAC6C,IAAR,CAAaI,OAAb,EAAnB;AACA,WAAOjD,OAAO,CAAC6C,IAAf;AAEA,SAAKpF,OAAL,CAAayF,yBAAb,CAAuClD,OAAvC;AACD;AACF,CA5FD;;AA+FAxC,aAAa,CAACmB,WAAd,GAA4B,UAASwE,KAAT,EAAgB;AAC1C,MAAK,KAAKzF,UAAL,KAAoB,KAAzB,EAAiC;AAC/B,SAAKA,UAAL,CAAgB;AACdyF,MAAAA,KAAK,EAAEA,KADO;AAEdjB,MAAAA,EAAE,EAAEjD,QAAQ,CAACC;AAFC,KAAhB;AAID;AACF,CAPD;;AASA1B,aAAa,CAACqB,oBAAd,GAAqC,UAASuE,GAAT,EAAc;AACjD,MAAK,KAAKzF,mBAAL,KAA6B,KAAlC,EAA0C;AACxC,SAAKA,mBAAL,CAAyByF,GAAzB;AACD;AACF,CAJD;;AAMA5F,aAAa,CAACuB,cAAd,GAA+B,UAASsE,gBAAT,EAA2B;AACxD,MAAK,KAAKvF,aAAL,KAAuB,KAA5B,EAAoC;AAClC,SAAKA,aAAL,CAAmBuF,gBAAnB;AACD;AACF,CAJD;;AAMA7F,aAAa,CAACwB,SAAd,GAA0B,iBAA4B;AAAA,MAAfsE,YAAe;;AACpD,MAAK,OAAOA,YAAY,CAACC,IAApB,KAA6B,QAAlC,EAA6C;AAC3C,QAAI;AACFD,MAAAA,YAAY,CAACC,IAAb,GAAoB1B,IAAI,CAAC2B,KAAL,CAAWH,gBAAgB,CAACE,IAA5B,CAApB;AACD,KAFD,CAEE,OAAME,CAAN,EAAS,CAEV;AACF;;AAED,OAAK5F,QAAL,CAAcyF,YAAd;AACD,CAVD;;AAYA9F,aAAa,CAACkG,4BAAd,GAA6C,UAASH,IAAT,EAAwC;AAAA,MAAzBI,gBAAyB,uEAAN,IAAM;;AACnF,MAAG,CAACJ,IAAJ,EAAU;AACR;AACD;;AAED,MAAKI,gBAAgB,KAAK,IAA1B,EAAiC;AAC/BA,IAAAA,gBAAgB,GACdJ,IAAI,CAACK,UAAL,KAAoB,KAApB,IACAnE,QAAQ,CAACE,YAAT,KAA0B,YAD1B,IAEAF,QAAQ,CAACE,YAAT,KAA0B,SAH5B;AAKD;;AAED,MAAIkE,aAAJ;;AAEA,MAAK5E,QAAQ,CAACC,EAAT,KAAgB,KAArB,EAA6B;AAC3B,QAAM4E,SAAS,GAAGP,IAAI,CAACQ,OAAL,EAAlB;AAEAF,IAAAA,aAAa,GAAG;AACdzD,MAAAA,EAAE,EAAE0D,SAAF,oBAAEA,SAAS,CAAE1D,EADD;AAEdwD,MAAAA,UAAU,EAAE,CAACD,gBAFC;AAGdnE,MAAAA,eAAe,EAAE,CAAAsE,SAAS,QAAT,YAAAA,SAAS,CAAEtE,eAAX,MAA+B,CAA/B,IAAoC,KAHvC;AAId6B,MAAAA,OAAO,EAAEkC,IAAI,CAACS,UAAL,EAJK;AAKdT,MAAAA,IAAI,EAAEO,SALQ;AAMd1F,MAAAA,KAAK,EAAEmF,IAAI,CAACU,aAAL,EANO;AAOd/C,MAAAA,KAAK,EAAEqC,IAAI,CAACW,QAAL,EAPO;AAQd/C,MAAAA,QAAQ,EAAEoC,IAAI,CAACY,WAAL,EARI;AASd7D,MAAAA,SAAS,EAAEiD,IAAI,CAACa,QAAL,EATG;AAUdxB,MAAAA,QAAQ,EAAEyB,IAAI,CAACb,KAAL,CAAWD,IAAI,CAACe,SAAhB,CAVI;AAWdC,MAAAA,MAAM,EAAEhB,IAAI,CAACiB,mBAAL,EAXM;AAYdC,MAAAA,UAAU,EAAElB,IAAI,CAACmB,WAAL,EAZE;AAadC,MAAAA,MAAM,EAAE,gBAACC,GAAD;AAAA,eAASrB,IAAI,CAACoB,MAAL,CAAYC,GAAZ,CAAT;AAAA;AAbM,KAAhB;;AAgBA,QAAGvE,KAAK,CAACwD,aAAa,CAACjB,QAAf,CAAR,EAAkC;AAChC,aAAOiB,aAAa,CAACjB,QAArB;AACD;AAEF,GAvBD,MAuBO;AACLiB,IAAAA,aAAa;AACXD,MAAAA,UAAU,EAAE,CAACD,gBADF;AAEXgB,MAAAA,MAAM,EAAE,kBAAM,CAAE;AAFL,OAGRpB,IAHQ,CAAb;;AAMA,QAAK,OAAOM,aAAa,CAACN,IAArB,KAA8B,QAAnC,EAA8C;AAC5C,UAAI;AACFM,QAAAA,aAAa,CAACN,IAAd,GAAqB1B,IAAI,CAAC2B,KAAL,CAAWK,aAAa,CAACN,IAAzB,CAArB;AACD,OAFD,CAEE,OAAME,CAAN,EAAS,CAEV;AACF;;AAED,QAAK,OAAOI,aAAa,CAACnD,QAArB,KAAkC,QAAvC,EAAkD;AAChD,UAAI;AACFmD,QAAAA,aAAa,CAACnD,QAAd,GAAyBmB,IAAI,CAAC2B,KAAL,CAAWK,aAAa,CAACnD,QAAzB,CAAzB;AACD,OAFD,CAEE,OAAM+C,CAAN,EAAS,CAEV;AACF;;AAGDI,IAAAA,aAAa,CAACN,IAAd,mCACM,OAAOM,aAAa,CAACnD,QAArB,KAAkC,QAAlC,GAA6CmD,aAAa,CAACnD,QAA3D,GAAsE,EAD5E,GAEM,OAAOmD,aAAa,CAACN,IAArB,KAA8B,QAA9B,GAAyCM,aAAa,CAACN,IAAvD,GAA8D,EAFpE;AAKA,WAAOM,aAAa,CAACnD,QAArB;AACA,WAAOmD,aAAa,CAACgB,cAArB;AACD;;AAED,SAAOhB,aAAP;AACD,CAxED;;AA0EArG,aAAa,CAACsB,eAAd,GAAgC,UAASyE,IAAT,EAA4C;AAAA,MAA7BuB,mBAA6B,uEAAP,KAAO;;AAC1E,MAAK,KAAKlH,cAAL,KAAwB,KAA7B,EAAqC;AACnC,QAAI0F,YAAY,GAAGC,IAAnB;;AAEA,QAAG,CAACuB,mBAAJ,EAAyB;AACvBxB,MAAAA,YAAY,GAAG,KAAKI,4BAAL,CAAkCH,IAAlC,CAAf;AACD;;AAED,SAAK3F,cAAL,CAAoB0F,YAApB;AACD;AACF,CAVD;;AAaA9F,aAAa,CAACuH,mBAAd,GAAoC,YAAW;AAC7C,OAAK9G,2BAAL,GAAmC,KAAnC;AACD,CAFD;;AAKAT,aAAa,CAACqC,mBAAd,GAAoC,YAAW;AAC7C,MAAKZ,QAAQ,CAACC,EAAT,KAAgB,KAArB,EAA6B;AAC3B,QAAK,KAAKjB,2BAAL,KAAqC,KAA1C,EAAkD;AAChD,WAAKA,2BAAL,GAAmC,IAAnC;AACA,aAAO,KAAKK,UAAL,CAAiB,oBAAjB,EAAuC,CAAE,KAAKJ,WAAP,CAAvC,EACE8G,IADF,CACO,KAAKD,mBAAL,CAAyBnG,IAAzB,CAA8B,IAA9B,CADP,EAEEqG,KAFF,CAEQ,KAAKF,mBAAL,CAAyBnG,IAAzB,CAA8B,IAA9B,CAFR,CAAP;AAGD;AACF,GAPD,MAOO,IAAIK,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AACpC,WAAO,KAAKZ,UAAL,CAAiB,oBAAjB,EAAuC,EAAvC,CAAP;AACD;AACF,CAXD;;AAcAd,aAAa,CAACoC,kBAAd,GAAmC,YAAW;AAC5C,MAAKX,QAAQ,CAACC,EAAT,KAAgB,KAArB,EAA6B;AAC3B,WAAO,KAAKZ,UAAL,CAAiB,oBAAjB,EAAuC,CAAE,KAAKJ,WAAP,CAAvC,CAAP;AACD,GAFD,MAEO,IAAIe,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AACpC,WAAO,KAAKZ,UAAL,CAAiB,oBAAjB,EAAuC,EAAvC,CAAP;AACD;AACF,CAND;;AASAd,aAAa,CAAC0H,gBAAd,GAAiC,YAAW;AAC1C,SAAO,KAAK5G,UAAL,CAAgB,kBAAhB,EAAoC6G,SAApC,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAAC4H,oBAAd,GAAqC,YAAY;AAC/C,SAAO,KAAK9G,UAAL,CAAgB,sBAAhB,EAAwC6G,SAAxC,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAACwE,wBAAd,GAAyC,YAAW;AAClD,SAAO,KAAK1D,UAAL,CAAgB,0BAAhB,EAA4C6G,SAA5C,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAAC0F,yBAAd,GAA0C,YAAW;AACnD,SAAO,KAAK5E,UAAL,CAAgB,2BAAhB,EAA6C6G,SAA7C,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAAC6H,wBAAd,GAAyC,UAAS3E,QAAT,EAAmB;AAC1DR,EAAAA,OAAO,CAACC,IAAR,CAAa,8FAAb;AAEA,SAAO,KAAKmF,uBAAL,CAA6B5E,QAA7B,CAAP;AACD,CAJD;;AAMAlD,aAAa,CAAC8H,uBAAd,GAAwC,UAAST,cAAT,EAAyB;AAC/D,MAAG,OAAOA,cAAP,KAA0B,QAA7B,EAAuC;AAAA;;AACrCA,IAAAA,cAAc,sBAAGA,cAAH,qBAAG,gBAAgBzE,EAAjC;AACD;;AAED,MAAG,OAAOyE,cAAP,KAA0B,QAA7B,EAAuC;AACrCA,IAAAA,cAAc,GAAG,KAAKA,cAAtB;AACD;;AAED,MAAK5F,QAAQ,CAACC,EAAT,KAAgB,KAArB,EAA6B;AAC3B,WAAO,KAAKZ,UAAL,CAAgB,mCAAhB,EAAqD,CAAC,CAACuG,cAAD,CAAD,CAArD,CAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAKvG,UAAL,CAAgB,yBAAhB,EAA2C,CAACuG,cAAD,CAA3C,CAAP;AACD;AACF,CAdD;;AAgBArH,aAAa,CAAC+H,sBAAd,GAAuC,YAAW;AAC9C,SAAO,KAAKjH,UAAL,CAAgB,wBAAhB,EAA0C6G,SAA1C,CAAP;AACH,CAFD;;AAIA3H,aAAa,CAACgI,2BAAd,GAA4C,YAAW;AACrD,MAAKvG,QAAQ,CAACC,EAAT,KAAgB,KAArB,EAA6B;AAC3B,WAAO,KAAKZ,UAAL,CAAgB,sCAAhB,EAAwD6G,SAAxD,CAAP;AACD,GAFD,MAEO,IAAIlG,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AACpC,WAAO,KAAKZ,UAAL,CAAgB,6BAAhB,EAA+C6G,SAA/C,CAAP;AACD;AACF,CAND;;AAQA3H,aAAa,CAACiI,6BAAd,GAA8C,YAAW;AACvD,SAAO,KAAKnH,UAAL,CAAgB,+BAAhB,EAAiD6G,SAAjD,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAACkI,6BAAd,GAA8C,YAAW;AACvD,SAAO,KAAKpH,UAAL,CAAgB,+BAAhB,EAAiD6G,SAAjD,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAAC6B,sBAAd,GAAuC,UAAS5B,OAAT,EAAkB;AAAA;;AACvD,OAAKa,UAAL,CAAgB,wBAAhB,EAA0C0G,IAA1C,CAA+C,UAACW,MAAD,EAAY;AACzDlI,IAAAA,OAAO,CACL,MAAI,CAACiG,4BAAL,CAAkCiC,MAAlC,EAA0C,IAA1C,CADK,CAAP;AAGD,GAJD;AAKD,CAND;;AAQAnI,aAAa,CAACoI,gBAAd,GAAiC,YAAW;AAC1C,SAAO,KAAKtH,UAAL,CAAgB,kBAAhB,EAAoC6G,SAApC,CAAP;AACD,CAFD;;AAKA3H,aAAa,CAACqI,kBAAd,GAAmC,YAAW;AAC5C,SAAO,KAAKvH,UAAL,CAAgB,oBAAhB,EAAsC6G,SAAtC,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAACsI,qBAAd,GAAsC,YAAW;AAE/C,SAAO,KAAKxH,UAAL,CAAgB,uBAAhB,EAAyC6G,SAAzC,CAAP;AACD,CAHD;;AAKA3H,aAAa,CAACuI,+BAAd,GAAgD,YAAW;AACzD,SAAO,KAAKzH,UAAL,CAAgB,iCAAhB,EAAmD6G,SAAnD,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAACwI,yBAAd,GAA0C,YAAW;AACnD,SAAO,KAAK1H,UAAL,CAAgB,2BAAhB,EAA6C6G,SAA7C,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAACyI,8BAAd,GAA+C,UAASC,QAAT,EAAmB;AACjE,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,aAAD,EAAmB;AAC3C,QAAIC,mBAAmB,GAAG,EAA1B;;AACA,QAAG,CAAAD,aAAa,QAAb,YAAAA,aAAa,CAAEE,MAAf,IAAwB,CAA3B,EAA8B;AAC7B,UAAGrH,QAAQ,CAACC,EAAT,KAAgB,KAAnB,EAAyB;AACxBmH,QAAAA,mBAAmB,GAAGD,aAAa,CAACG,GAAd,CAAkB,UAAAC,KAAK,EAAI;AAChD,iBAAQ;AACPlG,YAAAA,SAAS,EAAEkG,KAAF,oBAAEA,KAAK,CAAEnI,KADX;AAEP+B,YAAAA,EAAE,EAAEoG,KAAK,CAACpG,EAFH;AAGWyC,YAAAA,IAAI,EAAG2D,KAAK,CAAC3D,IAAN,GAAa,IAAIwB,IAAJ,CAASmC,KAAK,CAAC3D,IAAf,CAAb,GAAoC,IAHtD;AAIPvB,YAAAA,MAAM,EAAEkF,KAAF,oBAAEA,KAAK,CAAEpI,KAJR;AAKPiD,YAAAA,OAAO,EAAEmF,KAAF,oBAAEA,KAAK,CAAEpF,IALT;AAMDF,YAAAA,KAAK,EAAEsF,KAAF,oBAAEA,KAAK,CAAEtF,KANb;AAODqC,YAAAA,IAAI,EAAEiD,KAAF,oBAAEA,KAAK,CAAE9F;AAPZ,WAAR;AASA,SAVqB,CAAtB;AAWA,OAZD,MAYO,IAAGzB,QAAQ,CAACC,EAAT,KAAgB,SAAnB,EAA8B;AACpCmH,QAAAA,mBAAmB,GAAGD,aAAa,CAACG,GAAd,CAAkB,UAAAC,KAAK,EAAI;AAE3C,cAAI;AACFA,YAAAA,KAAK,CAACjD,IAAN,GAAa1B,IAAI,CAAC2B,KAAL,CAAWgD,KAAK,CAACjD,IAAjB,CAAb;AACD,WAFD,CAEE,OAAME,CAAN,EAAS,CAAG;;AAEnB,iBAAQ;AACPnD,YAAAA,SAAS,EAAEkG,KAAK,CAAClG,SADV;AAEPmG,YAAAA,cAAc,EAAED,KAAK,CAACC,cAFf;AAGPrG,YAAAA,EAAE,EAAEoG,KAAK,CAACpG,EAHH;AAIPyC,YAAAA,IAAI,EAAE,IAAIwB,IAAJ,CAASmC,KAAK,CAAC3D,IAAf,CAJC;AAKPvB,YAAAA,MAAM,EAAEkF,KAAK,CAAClF,MALP;AAMPD,YAAAA,OAAO,EAAEmF,KAAK,CAACnF,OANR;AAOPH,YAAAA,KAAK,EAAEsF,KAAK,CAACtF,KAPN;AAQPqC,YAAAA,IAAI,EAAEiD,KAAK,CAACjD;AARL,WAAR;AAUA,SAhBqB,CAAtB;AAiBA;AACD;;AACD2C,IAAAA,QAAQ,CAACG,mBAAD,CAAR;AACA,GApCD;;AAsCC,MAAGpH,QAAQ,CAACC,EAAT,KAAgB,KAAnB,EAAyB;AACvB,WAAO,KAAKZ,UAAL,CAAgB,gCAAhB,EAAkD,CAAC6H,gBAAD,CAAlD,CAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAK7H,UAAL,CAAgB,gCAAhB,EAAkD,CAAC6H,gBAAD,CAAlD,CAAP;AACD;AACF,CA5CD;;AA8CA3I,aAAa,CAACkJ,4BAAd,GAA6C,YAAW;AACtD,SAAO,KAAKpI,UAAL,CAAgB,8BAAhB,EAAgD6G,SAAhD,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAACmJ,SAAd,GAA0B,YAAW;AACnC,SAAO,KAAKrI,UAAL,CAAgB,WAAhB,EAA6B6G,SAA7B,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAACoJ,WAAd,GAA4B,YAAW;AACrC,SAAO,KAAKtI,UAAL,CAAgB,aAAhB,EAA+B6G,SAA/B,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAACqJ,aAAd,GAA8B,YAAW;AACvC,SAAO,KAAKvI,UAAL,CAAgB,eAAhB,EAAiC6G,SAAjC,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAACsJ,aAAd,GAA8B,YAAW;AACvC,SAAO,KAAKxI,UAAL,CAAgB,eAAhB,EAAiC6G,SAAjC,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAACuJ,cAAd,GAA+B,YAAW;AACxC,SAAO,KAAKzI,UAAL,CAAgB,gBAAhB,EAAkC6G,SAAlC,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAACwJ,aAAd,GAA8B,YAAW;AACvC,SAAO,KAAK1I,UAAL,CAAgB,eAAhB,EAAiC6G,SAAjC,CAAP;AACD,CAFD;;AAIA3H,aAAa,CAACyJ,yBAAd,GAA0C,YAAW;AACnD,SAAO,KAAK3I,UAAL,CAAgB,2BAAhB,EAA6C6G,SAA7C,CAAP;AACD,CAFD;;AAKA3H,aAAa,CAAC0J,UAAd,GAA2BC,MAAM,CAACC,MAAP,CAAc;AACvCC,EAAAA,OAAO,EAAE,CAD8B;AAEvCC,EAAAA,IAAI,EAAE,CAFiC;AAGvCC,EAAAA,GAAG,EAAE,CAHkC;AAIvCC,EAAAA,GAAG,EAAE,CAJkC;AAKvCC,EAAAA,IAAI,EAAE,CALiC;AAMvCC,EAAAA,WAAW,EAAE,CAAC;AANyB,CAAd,CAA3B;AASAC,MAAM,CAACC,OAAP,GAAiBpK,aAAjB","sourcesContent":["/**\n * @providesModule Notifications\n */\n\n'use strict';\n\nimport { AppState, Platform } from 'react-native';\nimport { component } from './component';\n\nconst Notifications = {\n  handler: component,\n  onRegister: false,\n  onRegistrationError: false,\n  onNotification: false,\n  onAction: false,\n  onRemoteFetch: false,\n  isLoaded: false,\n  isPopInitialNotification: false,\n\n  isPermissionsRequestPending: false,\n\n  permissions: {\n    alert: true,\n    badge: true,\n    sound: true\n  }\n};\n\nNotifications.callNative = function(name, params) {\n  if ( typeof this.handler[name] === 'function' ) {\n    if ( typeof params !== 'array' &&\n       typeof params !== 'object' ) {\n      params = [];\n    }\n\n    return this.handler[name](...params);\n  } else {\n    return null;\n  }\n};\n\n/**\n * Configure local and remote notifications\n * @param {Object}    options\n * @param {function}  options.onRegister - Fired when the user registers for remote notifications.\n * @param {function}  options.onNotification - Fired when a remote notification is received.\n * @param {function}  options.onAction - Fired when a remote notification is received.\n * @param {function}  options.onRegistrationError - Fired when the user fails to register for remote notifications.\n * @param {Object}    options.permissions - Permissions list\n * @param {Boolean}   options.requestPermissions - Check permissions when register\n */\nNotifications.configure = function(options) {\n  if ( typeof options.onRegister !== 'undefined' ) {\n    this.onRegister = options.onRegister;\n  }\n\n  if ( typeof options.onRegistrationError !== 'undefined' ) {\n    this.onRegistrationError = options.onRegistrationError;\n  }\n\n  if ( typeof options.onNotification !== 'undefined' ) {\n    this.onNotification = options.onNotification;\n  }\n\n  if ( typeof options.onAction !== 'undefined' ) {\n    this.onAction = options.onAction;\n  }\n\n  if ( typeof options.permissions !== 'undefined' ) {\n    this.permissions = options.permissions;\n  }\n\n  if ( typeof options.onRemoteFetch !== 'undefined' ) {\n    this.onRemoteFetch = options.onRemoteFetch;\n  }\n\n  if ( this.isLoaded === false ) {\n    this._onRegister = this._onRegister.bind(this);\n    this._onRegistrationError = this._onRegistrationError.bind(this);\n    this._onNotification = this._onNotification.bind(this);\n    this._onRemoteFetch = this._onRemoteFetch.bind(this);\n    this._onAction = this._onAction.bind(this);\n    this.callNative( 'addEventListener', [ 'register', this._onRegister ] );\n    this.callNative( 'addEventListener', [ 'registrationError', this._onRegistrationError ] );\n    this.callNative( 'addEventListener', [ 'notification', this._onNotification ] );\n    this.callNative( 'addEventListener', [ 'localNotification', this._onNotification ] );\n    Platform.OS === 'android' ? this.callNative( 'addEventListener', [ 'action', this._onAction ] ) : null\n    Platform.OS === 'android' ? this.callNative( 'addEventListener', [ 'remoteFetch', this._onRemoteFetch ] ) : null\n\n    this.isLoaded = true;\n  }\n\n  const handlePopInitialNotification = (state) => {\n    if('active' !== state) {\n      return;\n    }\n\n    if (options.popInitialNotification === undefined || options.popInitialNotification === true) {\n      this.popInitialNotification(function(firstNotification) {\n        if(this.isPopInitialNotification) {\n          return;\n        }\n        \n        this.isPopInitialNotification = true;\n        \n        if (!firstNotification || false === firstNotification.userInteraction) {\n          return;\n        }\n        \n        this._onNotification(firstNotification, true);\n      }.bind(this));\n    }\n  }\n\n  AppState.addEventListener('change', handlePopInitialNotification.bind(this));\n\n  handlePopInitialNotification(AppState.currentState);\n\n  if ( options.requestPermissions !== false ) {\n    this._requestPermissions();\n  }\n};\n\n/* Unregister */\nNotifications.unregister = function() {\n  this.callNative( 'removeEventListener', [ 'register', this._onRegister ] )\n  this.callNative( 'removeEventListener', [ 'registrationError', this._onRegistrationError ] )\n  this.callNative( 'removeEventListener', [ 'notification', this._onNotification ] )\n  this.callNative( 'removeEventListener', [ 'localNotification', this._onNotification ] )\n  Platform.OS === 'android' ? this.callNative( 'removeEventListener', [ 'action', this._onAction ] ) : null\n  Platform.OS === 'android' ? this.callNative( 'removeEventListener', [ 'remoteFetch', this._onRemoteFetch ] ) : null\n  this.isLoaded = false;\n};\n\n/**\n * Local Notifications\n * @param {Object}    details\n * @param {String}    details.title  -  The title displayed in the notification alert.\n * @param {String}    details.message - The message displayed in the notification alert.\n * @param {String}    details.ticker -  ANDROID ONLY: The ticker displayed in the status bar.\n * @param {Object}    details.userInfo -  iOS ONLY: The userInfo used in the notification alert.\n */\nNotifications.localNotification = function({...details}) {\n  if ('android' === Platform.OS && details && !details.channelId) {\n    console.warn('No channel id passed, notifications may not work.');\n  }\n\n  if (details && typeof details.id === 'number') {\n    if (isNaN(details.id)) {\n      console.warn('NaN value has been passed as id');\n      delete details.id;\n    }\n    else {\n      details.id = '' + details.id;\n    }\n  }\n\n  if (Platform.OS === 'ios') {\n    // https://developer.apple.com/reference/uikit/uilocalnotification\n\n    let soundName = details.soundName ? details.soundName : 'default'; // play sound (and vibrate) as default behaviour\n\n    if (details.hasOwnProperty('playSound') && !details.playSound) {\n      soundName = ''; // empty string results in no sound (and no vibration)\n    }\n\n    if(details.picture) {\n      details.userInfo = details.userInfo || {};\n      details.userInfo.image = details.picture;\n    }\n\n    // for valid fields see: https://github.com/react-native-push-notification-ios/push-notification-ios#addnotificationrequest\n\n    this.handler.addNotificationRequest({\n      id: (!details.id ? Math.floor(Math.random() * Math.pow(2, 32)).toString() : details.id),\n      title: details.title,\n      subtitle: details.subtitle,\n      body: details.message,\n      badge: details.number,\n      sound: soundName,\n      isSilent: details.playSound === false,\n      category: details.category,\n      userInfo: details.userInfo\n    });\n  } else {\n    if (details && typeof details.number === 'number') {\n      if(isNaN(details.number)) {\n        console.warn('NaN value has been passed as number');\n        delete details.number;\n      }\n      else {\n        details.number = '' + details.number;\n      }\n    }\n\n    if (details && typeof details.shortcutId === 'number') {\n      if(isNaN(details.shortcutId)) {\n        console.warn('NaN value has been passed as shortcutId');\n        delete details.shortcutId;\n      }\n      else {\n        details.shortcutId = '' + details.shortcutId;\n      }\n    }\n\n    if(details && Array.isArray(details.actions)) {\n      details.actions = JSON.stringify(details.actions);\n    }\n\n    if(details.userInfo) {\n      details.userInfo = JSON.stringify(details.userInfo);\n    }\n  \n    if(details.picture && !details.bigPictureUrl) {\n      details.bigPictureUrl = details.picture;\n    }\n\n    this.handler.presentLocalNotification(details);\n  }\n};\n\n/**\n * Local Notifications Schedule\n * @param {Object}    details (same as localNotification)\n * @param {Date}    details.date - The date and time when the system should deliver the notification\n */\nNotifications.localNotificationSchedule = function({...details}) {\n  if ('android' === Platform.os && details && !details.channelId) {\n    console.warn('No channel id passed, notifications may not work.');\n  }\n  \n  if (details && typeof details.id === 'number') {\n    if(isNaN(details.id)) {\n      console.warn('NaN value has been passed as id');\n      delete details.id;\n    }\n    else {\n      details.id = '' + details.id;\n    }\n  }\n\n  if (Platform.OS === 'ios') {\n    let soundName = details.soundName ? details.soundName : 'default'; // play sound (and vibrate) as default behaviour\n\n    if (details.hasOwnProperty('playSound') && !details.playSound) {\n      soundName = ''; // empty string results in no sound (and no vibration)\n    }\n\n    if(details.picture) {\n      details.userInfo = details.userInfo || {};\n      details.userInfo.image = details.picture;\n    }\n    \n    const repeatsComponent = {\n      second: ['minute', 'hour', 'day', 'week', 'month'].includes(details.repeatType),\n      minute: ['hour', 'day', 'week', 'month'].includes(details.repeatType),\n      hour: ['day', 'week', 'month'].includes(details.repeatType),\n      day: details.repeatType == \"month\",\n      dayOfWeek: details.repeatType == \"week\",\n    };\n\n    const iosDetails = {\n      id: (!details.id ? Math.floor(Math.random() * Math.pow(2, 32)).toString() : details.id),\n      fireDate: details.date.toISOString(),\n      title: details.title,\n      subtitle: details.subtitle,\n      body: details.message,\n      sound: soundName,\n      isSilent: details.playSound === false,\n      category: details.category,\n      userInfo: details.userInfo,\n      repeats: ['minute', 'hour', 'day', 'week', 'month'].includes(details.repeatType),\n      repeatsComponent: repeatsComponent\n    };\n\n    if (details.number) {\n      iosDetails.badge = parseInt(details.number, 10);\n    }\n\n    this.handler.addNotificationRequest(iosDetails);\n  } else {\n    if (details && typeof details.number === 'number') {\n      if (isNaN(details.number)) {\n        console.warn('NaN value has been passed as number');\n        delete details.number;\n      }\n      else {\n        details.number = '' + details.number;\n      }\n    }\n\n    if (details && typeof details.shortcutId === 'number') {\n      if (isNaN(details.shortcutId)) {\n        console.warn('NaN value has been passed as shortcutId');\n        delete details.shortcutId;\n      }\n      else {\n        details.shortcutId = '' + details.shortcutId;\n      }\n    }\n  \n    if(details && Array.isArray(details.actions)) {\n      details.actions = JSON.stringify(details.actions);\n    }\n\n    if(details.userInfo) {\n      details.userInfo = JSON.stringify(details.userInfo);\n    }\n\n    if(details.picture && !details.bigPictureUrl) {\n      details.bigPictureUrl = details.picture;\n    }\n\n    details.fireDate = details.date.getTime();\n    delete details.date;\n\n    this.handler.scheduleLocalNotification(details);\n  }\n};\n\n/* Internal Functions */\nNotifications._onRegister = function(token) {\n  if ( this.onRegister !== false ) {\n    this.onRegister({\n      token: token,\n      os: Platform.OS\n    });\n  }\n};\n\nNotifications._onRegistrationError = function(err) {\n  if ( this.onRegistrationError !== false ) {\n    this.onRegistrationError(err);\n  }\n};\n\nNotifications._onRemoteFetch = function(notificationData) {\n  if ( this.onRemoteFetch !== false ) {\n    this.onRemoteFetch(notificationData)\n  }\n};\n\nNotifications._onAction = function({...notification}) {\n  if ( typeof notification.data === 'string' ) {\n    try {\n      notification.data = JSON.parse(notificationData.data);\n    } catch(e) {\n      /* void */\n    }\n  }\n\n  this.onAction(notification);\n}\n\nNotifications._transformNotificationObject = function(data, isFromBackground = null) {\n  if(!data) {\n    return;\n  }\n\n  if ( isFromBackground === null ) {\n    isFromBackground = (\n      data.foreground === false ||\n      AppState.currentState === 'background' ||\n      AppState.currentState === 'unknown'\n    );\n  }\n\n  let _notification;\n\n  if ( Platform.OS === 'ios' ) {\n    const notifData = data.getData();\n\n    _notification = {\n      id: notifData?.id,\n      foreground: !isFromBackground,\n      userInteraction: notifData?.userInteraction === 1 || false,\n      message: data.getMessage(),\n      data: notifData,\n      badge: data.getBadgeCount(),\n      title: data.getTitle(),\n      subtitle: data.getSubtitle(),\n      soundName: data.getSound(),\n      fireDate: Date.parse(data._fireDate),\n      action: data.getActionIdentifier(),\n      reply_text: data.getUserText(),\n      finish: (res) => data.finish(res)\n    };\n\n    if(isNaN(_notification.fireDate)) {\n      delete _notification.fireDate;\n    }\n\n  } else {\n    _notification = {\n      foreground: !isFromBackground,\n      finish: () => {},\n      ...data,\n    };\n\n    if ( typeof _notification.data === 'string' ) {\n      try {\n        _notification.data = JSON.parse(_notification.data);\n      } catch(e) {\n        /* void */\n      }\n    }\n    \n    if ( typeof _notification.userInfo === 'string' ) {\n      try {\n        _notification.userInfo = JSON.parse(_notification.userInfo);\n      } catch(e) {\n        /* void */\n      }\n    }\n\n\n    _notification.data = {\n      ...(typeof _notification.userInfo === 'object' ? _notification.userInfo : {}),\n      ...(typeof _notification.data === 'object' ? _notification.data : {}),\n    };\n\n    delete _notification.userInfo;\n    delete _notification.notificationId;\n  }\n\n  return _notification;\n}\n\nNotifications._onNotification = function(data, initialNotification = false) {\n  if ( this.onNotification !== false ) {\n    let notification = data;\n\n    if(!initialNotification) {\n      notification = this._transformNotificationObject(data);\n    }\n\n    this.onNotification(notification);\n  }\n};\n\n/* onResultPermissionResult */\nNotifications._onPermissionResult = function() {\n  this.isPermissionsRequestPending = false;\n};\n\n// Prevent requestPermissions called twice if ios result is pending\nNotifications._requestPermissions = function() {\n  if ( Platform.OS === 'ios' ) {\n    if ( this.isPermissionsRequestPending === false ) {\n      this.isPermissionsRequestPending = true;\n      return this.callNative( 'requestPermissions', [ this.permissions ])\n              .then(this._onPermissionResult.bind(this))\n              .catch(this._onPermissionResult.bind(this));\n    }\n  } else if (Platform.OS === 'android') {\n    return this.callNative( 'requestPermissions', []);\n  }\n};\n\n// Stock requestPermissions function\nNotifications.requestPermissions = function() {\n  if ( Platform.OS === 'ios' ) {\n    return this.callNative( 'requestPermissions', [ this.permissions ]);\n  } else if (Platform.OS === 'android') {\n    return this.callNative( 'requestPermissions', []);\n  }\n};\n\n/* Fallback functions */\nNotifications.subscribeToTopic = function() {\n  return this.callNative('subscribeToTopic', arguments);\n};\n\nNotifications.unsubscribeFromTopic = function () {\n  return this.callNative('unsubscribeFromTopic', arguments);\n};\n\nNotifications.presentLocalNotification = function() {\n  return this.callNative('presentLocalNotification', arguments);\n};\n\nNotifications.scheduleLocalNotification = function() {\n  return this.callNative('scheduleLocalNotification', arguments);\n};\n\nNotifications.cancelLocalNotifications = function(userInfo) {\n  console.warn('This method is now deprecated, please use `cancelLocalNotification` (remove the ending `s`).');\n\n  return this.cancelLocalNotification(userInfo);\n};\n\nNotifications.cancelLocalNotification = function(notificationId) {\n  if(typeof notificationId === 'object') {\n    notificationId = notificationId?.id;\n  }\n\n  if(typeof notificationId === 'number') {\n    notificationId = '' + notificationId;\n  }\n\n  if ( Platform.OS === 'ios' ) {\n    return this.callNative('removePendingNotificationRequests', [[notificationId]]);\n  } else {\n    return this.callNative('cancelLocalNotification', [notificationId]);\n  }\n};\n\nNotifications.clearLocalNotification = function() {\n    return this.callNative('clearLocalNotification', arguments);\n};\n\nNotifications.cancelAllLocalNotifications = function() {\n  if ( Platform.OS === 'ios' ) {\n    return this.callNative('removeAllPendingNotificationRequests', arguments);\n  } else if (Platform.OS === 'android') {\n    return this.callNative('cancelAllLocalNotifications', arguments);\n  }\n};\n\nNotifications.setApplicationIconBadgeNumber = function() {\n  return this.callNative('setApplicationIconBadgeNumber', arguments);\n};\n\nNotifications.getApplicationIconBadgeNumber = function() {\n  return this.callNative('getApplicationIconBadgeNumber', arguments);\n};\n\nNotifications.popInitialNotification = function(handler) {\n  this.callNative('getInitialNotification').then((result) => {\n    handler(\n      this._transformNotificationObject(result, true)\n    );\n  });\n};\n\nNotifications.checkPermissions = function() {\n  return this.callNative('checkPermissions', arguments);\n};\n\n/* Abandon Permissions */\nNotifications.abandonPermissions = function() {\n  return this.callNative('abandonPermissions', arguments);\n}\n\nNotifications.clearAllNotifications = function() {\n  // Only available for Android\n  return this.callNative('clearAllNotifications', arguments)\n}\n\nNotifications.removeAllDeliveredNotifications = function() {\n  return this.callNative('removeAllDeliveredNotifications', arguments);\n}\n\nNotifications.getDeliveredNotifications = function() {\n  return this.callNative('getDeliveredNotifications', arguments);\n}\n\nNotifications.getScheduledLocalNotifications = function(callback) {\n\tconst mapNotifications = (notifications) => {\n\t\tlet mappedNotifications = [];\n\t\tif(notifications?.length > 0) {\n\t\t\tif(Platform.OS === 'ios'){\n\t\t\t\tmappedNotifications = notifications.map(notif => {\n\t\t\t\t\treturn ({\n\t\t\t\t\t\tsoundName: notif?.sound,\n\t\t\t\t\t\tid: notif.id,\n                        date: (notif.date ? new Date(notif.date) : null),\n\t\t\t\t\t\tnumber: notif?.badge,\n\t\t\t\t\t\tmessage: notif?.body,\n            title: notif?.title,\n            data: notif?.userInfo\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else if(Platform.OS === 'android') {\n\t\t\t\tmappedNotifications = notifications.map(notif => {\n\n          try {\n            notif.data = JSON.parse(notif.data);\n          } catch(e) { }\n\n\t\t\t\t\treturn ({\n\t\t\t\t\t\tsoundName: notif.soundName,\n\t\t\t\t\t\trepeatInterval: notif.repeatInterval,\n\t\t\t\t\t\tid: notif.id,\n\t\t\t\t\t\tdate: new Date(notif.date),\n\t\t\t\t\t\tnumber: notif.number,\n\t\t\t\t\t\tmessage: notif.message,\n\t\t\t\t\t\ttitle: notif.title,\n\t\t\t\t\t\tdata: notif.data,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tcallback(mappedNotifications);\n\t}\n\n  if(Platform.OS === 'ios'){\n    return this.callNative('getPendingNotificationRequests', [mapNotifications]);\n  } else {\n    return this.callNative('getScheduledLocalNotifications', [mapNotifications]);\n  }\n}\n\nNotifications.removeDeliveredNotifications = function() {\n  return this.callNative('removeDeliveredNotifications', arguments);\n}\n\nNotifications.invokeApp = function() {\n  return this.callNative('invokeApp', arguments);\n};\n\nNotifications.getChannels = function() {\n  return this.callNative('getChannels', arguments);\n};\n\nNotifications.channelExists = function() {\n  return this.callNative('channelExists', arguments);\n};\n\nNotifications.createChannel = function() {\n  return this.callNative('createChannel', arguments);\n};\n\nNotifications.channelBlocked = function() {\n  return this.callNative('channelBlocked', arguments);\n};\n\nNotifications.deleteChannel = function() {\n  return this.callNative('deleteChannel', arguments);\n};\n\nNotifications.setNotificationCategories = function() {\n  return this.callNative('setNotificationCategories', arguments);\n}\n\n// https://developer.android.com/reference/android/app/NotificationManager#IMPORTANCE_DEFAULT\nNotifications.Importance = Object.freeze({\n  DEFAULT: 3,\n  HIGH: 4,\n  LOW: 2,\n  MIN: 1,\n  NONE: 0,\n  UNSPECIFIED: -1000,\n});\n\nmodule.exports = Notifications;\n"]},"metadata":{},"sourceType":"module"}