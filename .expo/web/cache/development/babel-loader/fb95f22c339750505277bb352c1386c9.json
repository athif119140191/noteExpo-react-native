{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport CustomButton from \"../components/CustomButton\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setTasks } from \"../components/redux/action\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport CheckBox from '@react-native-community/checkbox';\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport PushNotification from 'react-native-push-notification';\nimport RNFS from 'react-native-fs';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Task(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskReducer;\n  }),\n      tasks = _useSelector.tasks,\n      taskID = _useSelector.taskID;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      desc = _useState4[0],\n      setDesc = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      done = _useState6[0],\n      setDone = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showBellModal = _useState8[0],\n      setShowBellModal = _useState8[1];\n\n  var _useState9 = useState('white'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      color = _useState10[0],\n      setColor = _useState10[1];\n\n  var _useState11 = useState('1'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      bellTime = _useState12[0],\n      setBellTime = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      image = _useState14[0],\n      setImage = _useState14[1];\n\n  useEffect(function () {\n    navigation.addListener('focus', function () {\n      getTask();\n    });\n  }, []);\n\n  var getTask = function getTask() {\n    var Task = tasks.find(function (task) {\n      return task.ID === taskID;\n    });\n\n    if (Task) {\n      setTitle(Task.Title);\n      setDesc(Task.Desc);\n      setDone(Task.Done);\n      setColor(Task.Color);\n      setImage(Task.Image);\n    }\n  };\n\n  var setTask = function setTask() {\n    if (title.length == 0) {\n      Alert.alert('Warning!', 'Please write your task title.');\n    } else {\n      try {\n        var Task = {\n          ID: taskID,\n          Title: title,\n          Desc: desc,\n          Done: done,\n          Color: color,\n          Image: image\n        };\n        var index = tasks.findIndex(function (task) {\n          return task.ID === taskID;\n        });\n        var newTasks = [];\n\n        if (index > -1) {\n          newTasks = _toConsumableArray(tasks);\n          newTasks[index] = Task;\n        } else {\n          newTasks = [].concat(_toConsumableArray(tasks), [Task]);\n        }\n\n        AsyncStorage.setItem('Tasks', JSON.stringify(newTasks)).then(function () {\n          dispatch(setTasks(newTasks));\n          Alert.alert('Success!', 'Task saved successfully.');\n          navigation.goBack();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  var setTaskAlarm = function setTaskAlarm() {\n    PushNotification.localNotificationSchedule({\n      channelId: 'task-channel',\n      title: title,\n      message: desc,\n      date: new Date(Date.now() + parseInt(bellTime) * 60 * 1000),\n      allowWhileIdle: true\n    });\n  };\n\n  var deleteImage = function deleteImage() {\n    RNFS.unlink(image).then(function () {\n      var index = tasks.findIndex(function (task) {\n        return task.ID === taskID;\n      });\n\n      if (index > -1) {\n        var newTasks = _toConsumableArray(tasks);\n\n        newTasks[index].Image = '';\n        AsyncStorage.setItem('Tasks', JSON.stringify(newTasks)).then(function () {\n          dispatch(setTasks(newTasks));\n          getTask();\n          Alert.alert('Success!', 'Task image is removed.');\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.body,\n      children: [_jsx(Modal, {\n        visible: showBellModal,\n        transparent: true,\n        onRequestClose: function onRequestClose() {\n          return setShowBellModal(false);\n        },\n        animationType: \"slide\",\n        hardwareAccelerated: true,\n        children: _jsx(View, {\n          style: styles.centered_view,\n          children: _jsxs(View, {\n            style: styles.bell_modal,\n            children: [_jsxs(View, {\n              style: styles.bell_body,\n              children: [_jsx(Text, {\n                style: styles.text,\n                children: \"Remind me After\"\n              }), _jsx(TextInput, {\n                style: styles.bell_input,\n                keyboardType: \"numeric\",\n                value: bellTime,\n                onChangeText: function onChangeText(value) {\n                  return setBellTime(value);\n                }\n              }), _jsx(Text, {\n                style: styles.text,\n                children: \"minute(s)\"\n              })]\n            }), _jsxs(View, {\n              style: styles.bell_buttons,\n              children: [_jsx(TouchableOpacity, {\n                style: styles.bell_cancel_button,\n                onPress: function onPress() {\n                  setShowBellModal(false);\n                },\n                children: _jsx(Text, {\n                  style: styles.text,\n                  children: \"Cancel\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.bell_ok_button,\n                onPress: function onPress() {\n                  setShowBellModal(false);\n                  setTaskAlarm();\n                },\n                children: _jsx(Text, {\n                  style: styles.text,\n                  children: \"OK\"\n                })\n              })]\n            })]\n          })\n        })\n      }), _jsx(TextInput, {\n        value: title,\n        style: styles.input,\n        placeholder: \"Title\",\n        onChangeText: function onChangeText(value) {\n          return setTitle(value);\n        }\n      }), _jsx(TextInput, {\n        value: desc,\n        style: styles.input,\n        placeholder: \"Description\",\n        multiline: true,\n        onChangeText: function onChangeText(value) {\n          return setDesc(value);\n        }\n      }), _jsxs(View, {\n        style: styles.color_bar,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.color_white,\n          onPress: function onPress() {\n            setColor('white');\n          },\n          children: color === 'white' && _jsx(FontAwesome5, {\n            name: 'check',\n            size: 25,\n            color: '#000000'\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.color_red,\n          onPress: function onPress() {\n            setColor('red');\n          },\n          children: color === 'red' && _jsx(FontAwesome5, {\n            name: 'check',\n            size: 25,\n            color: '#000000'\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.color_blue,\n          onPress: function onPress() {\n            setColor('blue');\n          },\n          children: color === 'blue' && _jsx(FontAwesome5, {\n            name: 'check',\n            size: 25,\n            color: '#000000'\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.color_green,\n          onPress: function onPress() {\n            setColor('green');\n          },\n          children: color === 'green' && _jsx(FontAwesome5, {\n            name: 'check',\n            size: 25,\n            color: '#000000'\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.extra_row,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.extra_button,\n          onPress: function onPress() {\n            setShowBellModal(true);\n          },\n          children: _jsx(FontAwesome5, {\n            name: 'bell',\n            size: 25,\n            color: '#ffffff'\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.extra_button,\n          onPress: function onPress() {\n            navigation.navigate('Camera', {\n              id: taskID\n            });\n          },\n          children: _jsx(FontAwesome5, {\n            name: 'camera',\n            size: 25,\n            color: '#ffffff'\n          })\n        })]\n      }), image ? _jsxs(View, {\n        children: [_jsx(Image, {\n          style: styles.image,\n          source: {\n            uri: image\n          }\n        }), _jsx(TouchableOpacity, {\n          style: styles.delete,\n          onPress: function onPress() {\n            deleteImage();\n          },\n          children: _jsx(FontAwesome5, {\n            name: 'trash',\n            size: 25,\n            color: '#ff3636'\n          })\n        })]\n      }) : null, _jsxs(View, {\n        style: styles.checkbox,\n        children: [_jsx(CheckBox, {\n          value: done,\n          onValueChange: function onValueChange(newValue) {\n            return setDone(newValue);\n          }\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"Is Done\"\n        })]\n      }), _jsx(CustomButton, {\n        title: \"Save Task\",\n        color: \"#1eb900\",\n        style: {\n          width: '100%'\n        },\n        onPressFunction: setTask\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 10\n  },\n  checkbox: {\n    flexDirection: 'row',\n    margin: 10\n  },\n  input: {\n    width: '100%',\n    borderWidth: 1,\n    borderColor: '#555555',\n    borderRadius: 10,\n    backgroundColor: '#ffffff',\n    textAlign: 'left',\n    fontSize: 20,\n    margin: 10,\n    paddingHorizontal: 10\n  },\n  text: {\n    fontSize: 20,\n    color: '#000000'\n  },\n  color_bar: {\n    flexDirection: 'row',\n    height: 50,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: '#555555',\n    marginVertical: 10\n  },\n  color_white: {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10\n  },\n  color_red: {\n    flex: 1,\n    backgroundColor: '#f28b82',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  color_blue: {\n    flex: 1,\n    backgroundColor: '#aecbfa',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  color_green: {\n    flex: 1,\n    backgroundColor: '#ccff90',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10\n  },\n  extra_row: {\n    flexDirection: 'row',\n    marginVertical: 10\n  },\n  extra_button: {\n    flex: 1,\n    height: 50,\n    backgroundColor: '#0080ff',\n    borderRadius: 10,\n    marginHorizontal: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  centered_view: {\n    flex: 1,\n    backgroundColor: '#00000099',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  bell_modal: {\n    width: 300,\n    height: 200,\n    backgroundColor: '#ffffff',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#000000'\n  },\n  bell_body: {\n    height: 150,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  bell_buttons: {\n    flexDirection: 'row',\n    height: 50\n  },\n  bell_input: {\n    width: 50,\n    borderWidth: 1,\n    borderColor: '#555555',\n    borderRadius: 10,\n    backgroundColor: '#ffffff',\n    textAlign: 'center',\n    fontSize: 20,\n    margin: 10\n  },\n  bell_cancel_button: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: '#000000',\n    borderBottomLeftRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  bell_ok_button: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: '#000000',\n    borderBottomRightRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  image: {\n    width: 300,\n    height: 300,\n    margin: 20\n  },\n  delete: {\n    width: 50,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    right: 20,\n    bottom: 20,\n    backgroundColor: '#ffffff80',\n    margin: 10,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["D:/ALPro/Smt 6/PAM/noteExpo/app/screens/Task.js"],"names":["React","useState","useEffect","TextInput","CustomButton","useDispatch","useSelector","setTasks","AsyncStorage","CheckBox","FontAwesome5","PushNotification","RNFS","Task","navigation","state","taskReducer","tasks","taskID","dispatch","title","setTitle","desc","setDesc","done","setDone","showBellModal","setShowBellModal","color","setColor","bellTime","setBellTime","image","setImage","addListener","getTask","find","task","ID","Title","Desc","Done","Color","Image","setTask","length","Alert","alert","index","findIndex","newTasks","setItem","JSON","stringify","then","goBack","catch","err","console","log","error","setTaskAlarm","localNotificationSchedule","channelId","message","date","Date","now","parseInt","allowWhileIdle","deleteImage","unlink","styles","body","centered_view","bell_modal","bell_body","text","bell_input","value","bell_buttons","bell_cancel_button","bell_ok_button","input","color_bar","color_white","color_red","color_blue","color_green","extra_row","extra_button","navigate","id","uri","delete","checkbox","newValue","width","StyleSheet","create","flex","alignItems","padding","flexDirection","margin","borderWidth","borderColor","borderRadius","backgroundColor","textAlign","fontSize","paddingHorizontal","height","marginVertical","justifyContent","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","marginHorizontal","position","right","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Alert, Modal, StyleSheet, Text, TouchableOpacity, View, Image, ScrollView } from 'react-native'\r\nimport { TextInput } from 'react-native-gesture-handler'\r\nimport CustomButton from '../components/CustomButton';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setTasks } from '../components/redux/action';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport CheckBox from '@react-native-community/checkbox';\r\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\r\nimport PushNotification from 'react-native-push-notification';\r\nimport RNFS from 'react-native-fs';\r\n\r\nexport default function Task({ navigation }) {\r\n\r\n    const { tasks, taskID } = useSelector(state => state.taskReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [done, setDone] = useState(false);\r\n    const [showBellModal, setShowBellModal] = useState(false);\r\n    const [color, setColor] = useState('white');\r\n    const [bellTime, setBellTime] = useState('1');\r\n    const [image, setImage] = useState('');\r\n\r\n    useEffect(() => {\r\n        navigation.addListener('focus', () => {\r\n            getTask();\r\n        });\r\n    }, [])\r\n\r\n    const getTask = () => {\r\n        const Task = tasks.find(task => task.ID === taskID)\r\n        if (Task) {\r\n            setTitle(Task.Title);\r\n            setDesc(Task.Desc);\r\n            setDone(Task.Done);\r\n            setColor(Task.Color);\r\n            setImage(Task.Image);\r\n        }\r\n    }\r\n\r\n    const setTask = () => {\r\n        if (title.length == 0) {\r\n            Alert.alert('Warning!', 'Please write your task title.')\r\n        } else {\r\n            try {\r\n                var Task = {\r\n                    ID: taskID,\r\n                    Title: title,\r\n                    Desc: desc,\r\n                    Done: done,\r\n                    Color: color,\r\n                    Image: image\r\n                }\r\n                const index = tasks.findIndex(task => task.ID === taskID);\r\n                let newTasks = [];\r\n                if (index > -1) {\r\n                    newTasks = [...tasks];\r\n                    newTasks[index] = Task;\r\n                } else {\r\n                    newTasks = [...tasks, Task];\r\n                }\r\n                AsyncStorage.setItem('Tasks', JSON.stringify(newTasks))\r\n                    .then(() => {\r\n                        dispatch(setTasks(newTasks));\r\n                        Alert.alert('Success!', 'Task saved successfully.');\r\n                        navigation.goBack();\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    const setTaskAlarm = () => {\r\n        PushNotification.localNotificationSchedule({\r\n            channelId: 'task-channel',\r\n            title: title,\r\n            message: desc,\r\n            date: new Date(Date.now() + parseInt(bellTime) * 60 * 1000),\r\n            allowWhileIdle: true,\r\n        });\r\n    }\r\n\r\n    const deleteImage = () => {\r\n        RNFS.unlink(image)\r\n            .then(() => {\r\n                const index = tasks.findIndex(task => task.ID === taskID);\r\n                if (index > -1) {\r\n                    let newTasks = [...tasks];\r\n                    newTasks[index].Image = '';\r\n                    AsyncStorage.setItem('Tasks', JSON.stringify(newTasks))\r\n                        .then(() => {\r\n                            dispatch(setTasks(newTasks));\r\n                            getTask();\r\n                            Alert.alert('Success!', 'Task image is removed.');\r\n                        })\r\n                        .catch(err => console.log(err))\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={styles.body}>\r\n                <Modal\r\n                    visible={showBellModal}\r\n                    transparent\r\n                    onRequestClose={() => setShowBellModal(false)}\r\n                    animationType='slide'\r\n                    hardwareAccelerated\r\n                >\r\n                    <View style={styles.centered_view}>\r\n                        <View style={styles.bell_modal}>\r\n                            <View style={styles.bell_body}>\r\n                                <Text style={styles.text}>Remind me After</Text>\r\n                                <TextInput\r\n                                    style={styles.bell_input}\r\n                                    keyboardType='numeric'\r\n                                    value={bellTime}\r\n                                    onChangeText={(value) => setBellTime(value)}\r\n                                />\r\n                                <Text style={styles.text}>minute(s)</Text>\r\n                            </View>\r\n                            <View style={styles.bell_buttons}>\r\n                                <TouchableOpacity\r\n                                    style={styles.bell_cancel_button}\r\n                                    onPress={() => {\r\n                                        setShowBellModal(false)\r\n                                    }}\r\n                                >\r\n                                    <Text style={styles.text}>Cancel</Text>\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity\r\n                                    style={styles.bell_ok_button}\r\n                                    onPress={() => {\r\n                                        setShowBellModal(false)\r\n                                        setTaskAlarm()\r\n                                    }}\r\n                                >\r\n                                    <Text style={styles.text}>OK</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </Modal>\r\n                <TextInput\r\n                    value={title}\r\n                    style={styles.input}\r\n                    placeholder='Title'\r\n                    onChangeText={(value) => setTitle(value)}\r\n                />\r\n                <TextInput\r\n                    value={desc}\r\n                    style={styles.input}\r\n                    placeholder='Description'\r\n                    multiline\r\n                    onChangeText={(value) => setDesc(value)}\r\n                />\r\n                <View style={styles.color_bar}>\r\n                    <TouchableOpacity\r\n                        style={styles.color_white}\r\n                        onPress={() => { setColor('white') }}\r\n                    >\r\n                        {color === 'white' &&\r\n                            <FontAwesome5\r\n                                name={'check'}\r\n                                size={25}\r\n                                color={'#000000'}\r\n                            />\r\n                        }\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={styles.color_red}\r\n                        onPress={() => { setColor('red') }}\r\n                    >\r\n                        {color === 'red' &&\r\n                            <FontAwesome5\r\n                                name={'check'}\r\n                                size={25}\r\n                                color={'#000000'}\r\n                            />\r\n                        }\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={styles.color_blue}\r\n                        onPress={() => { setColor('blue') }}\r\n                    >\r\n                        {color === 'blue' &&\r\n                            <FontAwesome5\r\n                                name={'check'}\r\n                                size={25}\r\n                                color={'#000000'}\r\n                            />\r\n                        }\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={styles.color_green}\r\n                        onPress={() => { setColor('green') }}\r\n                    >\r\n                        {color === 'green' &&\r\n                            <FontAwesome5\r\n                                name={'check'}\r\n                                size={25}\r\n                                color={'#000000'}\r\n                            />\r\n                        }\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.extra_row}>\r\n                    <TouchableOpacity\r\n                        style={styles.extra_button}\r\n                        onPress={() => { setShowBellModal(true) }}\r\n                    >\r\n                        <FontAwesome5\r\n                            name={'bell'}\r\n                            size={25}\r\n                            color={'#ffffff'}\r\n                        />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={styles.extra_button}\r\n                        onPress={() => { navigation.navigate('Camera', { id: taskID }) }}\r\n                    >\r\n                        <FontAwesome5\r\n                            name={'camera'}\r\n                            size={25}\r\n                            color={'#ffffff'}\r\n                        />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                {image ?\r\n                    <View>\r\n                        <Image\r\n                            style={styles.image}\r\n                            source={{ uri: image }}\r\n                        />\r\n                        <TouchableOpacity\r\n                            style={styles.delete}\r\n                            onPress={() => { deleteImage() }}\r\n                        >\r\n                            <FontAwesome5\r\n                                name={'trash'}\r\n                                size={25}\r\n                                color={'#ff3636'}\r\n                            />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    :\r\n                    null\r\n                }\r\n                <View style={styles.checkbox}>\r\n                    <CheckBox\r\n                        value={done}\r\n                        onValueChange={(newValue) => setDone(newValue)}\r\n                    />\r\n                    <Text style={styles.text}>\r\n                        Is Done\r\n                    </Text>\r\n                </View>\r\n                <CustomButton\r\n                    title='Save Task'\r\n                    color='#1eb900'\r\n                    style={{ width: '100%' }}\r\n                    onPressFunction={setTask}\r\n                />\r\n            </View>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    body: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        padding: 10,\r\n    },\r\n    checkbox: {\r\n        flexDirection: 'row',\r\n        margin: 10,\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        borderWidth: 1,\r\n        borderColor: '#555555',\r\n        borderRadius: 10,\r\n        backgroundColor: '#ffffff',\r\n        textAlign: 'left',\r\n        fontSize: 20,\r\n        margin: 10,\r\n        paddingHorizontal: 10,\r\n    },\r\n    text: {\r\n        fontSize: 20,\r\n        color: '#000000',\r\n    },\r\n    color_bar: {\r\n        flexDirection: 'row',\r\n        height: 50,\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        borderColor: '#555555',\r\n        marginVertical: 10,\r\n    },\r\n    color_white: {\r\n        flex: 1,\r\n        backgroundColor: '#ffffff',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderTopLeftRadius: 10,\r\n        borderBottomLeftRadius: 10,\r\n    },\r\n    color_red: {\r\n        flex: 1,\r\n        backgroundColor: '#f28b82',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    color_blue: {\r\n        flex: 1,\r\n        backgroundColor: '#aecbfa',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    color_green: {\r\n        flex: 1,\r\n        backgroundColor: '#ccff90',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderTopRightRadius: 10,\r\n        borderBottomRightRadius: 10,\r\n    },\r\n    extra_row: {\r\n        flexDirection: 'row',\r\n        marginVertical: 10,\r\n    },\r\n    extra_button: {\r\n        flex: 1,\r\n        height: 50,\r\n        backgroundColor: '#0080ff',\r\n        borderRadius: 10,\r\n        marginHorizontal: 5,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    centered_view: {\r\n        flex: 1,\r\n        backgroundColor: '#00000099',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    bell_modal: {\r\n        width: 300,\r\n        height: 200,\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: 20,\r\n        borderWidth: 1,\r\n        borderColor: '#000000',\r\n    },\r\n    bell_body: {\r\n        height: 150,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    bell_buttons: {\r\n        flexDirection: 'row',\r\n        height: 50,\r\n    },\r\n    bell_input: {\r\n        width: 50,\r\n        borderWidth: 1,\r\n        borderColor: '#555555',\r\n        borderRadius: 10,\r\n        backgroundColor: '#ffffff',\r\n        textAlign: 'center',\r\n        fontSize: 20,\r\n        margin: 10,\r\n    },\r\n    bell_cancel_button: {\r\n        flex: 1,\r\n        borderWidth: 1,\r\n        borderColor: '#000000',\r\n        borderBottomLeftRadius: 20,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    bell_ok_button: {\r\n        flex: 1,\r\n        borderWidth: 1,\r\n        borderColor: '#000000',\r\n        borderBottomRightRadius: 20,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    image: {\r\n        width: 300,\r\n        height: 300,\r\n        margin: 20,\r\n    },\r\n    delete: {\r\n        width: 50,\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'absolute',\r\n        right: 20,\r\n        bottom: 20,\r\n        backgroundColor: '#ffffff80',\r\n        margin: 10,\r\n        borderRadius: 5,\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}