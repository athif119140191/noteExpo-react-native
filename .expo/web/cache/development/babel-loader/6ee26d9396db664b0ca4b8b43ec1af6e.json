{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport colors from \"../misc/colors\";\nimport RoundIconBtn from \"./RoundIconBtn\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar NoteInputModal = function NoteInputModal(_ref) {\n  var visible = _ref.visible,\n      onClose = _ref.onClose,\n      onSubmit = _ref.onSubmit,\n      note = _ref.note,\n      isEdit = _ref.isEdit;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      desc = _useState4[0],\n      setDesc = _useState4[1];\n\n  var handleModalClose = function handleModalClose() {\n    Keyboard.dismiss();\n  };\n\n  useEffect(function () {\n    if (isEdit) {\n      setTitle(note.title);\n      setDesc(note.desc);\n    }\n  }, [isEdit]);\n\n  var handleOnChangeText = function handleOnChangeText(text, valueFor) {\n    if (valueFor === 'title') setTitle(text);\n    if (valueFor === 'desc') setDesc(text);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    if (!title.trim() && !desc.trim()) return onClose();\n\n    if (isEdit) {\n      onSubmit(title, desc, Date.now());\n    } else {\n      onSubmit(title, desc);\n      setTitle('');\n      setDesc('');\n    }\n\n    onClose();\n  };\n\n  var closeModal = function closeModal() {\n    if (!isEdit) {\n      setTitle('');\n      setDesc('');\n    }\n\n    onClose();\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      hidden: true\n    }), _jsxs(Modal, {\n      visible: visible,\n      animationType: \"fade\",\n      children: [_jsxs(View, {\n        style: styles.container,\n        children: [_jsx(TextInput, {\n          value: title,\n          onChangeText: function onChangeText(text) {\n            return handleOnChangeText(text, 'title');\n          },\n          placeholder: \"Title\",\n          style: [styles.input, styles.title]\n        }), _jsx(TextInput, {\n          value: desc,\n          multiline: true,\n          placeholder: \"Note\",\n          style: [styles.input, styles.desc],\n          onChangeText: function onChangeText(text) {\n            return handleOnChangeText(text, 'desc');\n          }\n        }), _jsxs(View, {\n          style: styles.btnContainer,\n          children: [_jsx(RoundIconBtn, {\n            size: 15,\n            antIconName: \"check\",\n            onPress: handleSubmit\n          }), title.trim() || desc.trim() ? _jsx(RoundIconBtn, {\n            size: 15,\n            style: {\n              marginLeft: 15\n            },\n            antIconName: \"close\",\n            onPress: closeModal\n          }) : null]\n        })]\n      }), _jsx(TouchableWithoutFeedback, {\n        onPress: handleModalClose,\n        children: _jsx(View, {\n          style: [styles.modalBG, StyleSheet.absoluteFillObject]\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20,\n    paddingTop: 15\n  },\n  input: {\n    borderBottomWidth: 2,\n    borderBottomColor: colors.PRIMARY,\n    fontSize: 20,\n    color: colors.DARK\n  },\n  title: {\n    height: 40,\n    marginBottom: 15,\n    fontWeight: 'bold'\n  },\n  desc: {\n    height: 100\n  },\n  modalBG: {\n    flex: 1,\n    zIndex: -1\n  },\n  btnContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingVertical: 15\n  }\n});\nexport default NoteInputModal;","map":{"version":3,"sources":["D:/ALPro/Smt 6/PAM/noteExpo/app/components/NoteInputModal.js"],"names":["React","useEffect","useState","colors","RoundIconBtn","NoteInputModal","visible","onClose","onSubmit","note","isEdit","title","setTitle","desc","setDesc","handleModalClose","Keyboard","dismiss","handleOnChangeText","text","valueFor","handleSubmit","trim","Date","now","closeModal","styles","container","input","btnContainer","marginLeft","modalBG","StyleSheet","absoluteFillObject","create","paddingHorizontal","paddingTop","borderBottomWidth","borderBottomColor","PRIMARY","fontSize","color","DARK","height","marginBottom","fontWeight","flex","zIndex","flexDirection","justifyContent","paddingVertical"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Modal,\r\n  Text,\r\n  StatusBar,\r\n  TextInput,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from 'react-native';\r\nimport colors from '../misc/colors';\r\nimport RoundIconBtn from './RoundIconBtn';\r\n\r\nconst NoteInputModal = ({ visible, onClose, onSubmit, note, isEdit }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n  const handleModalClose = () => {\r\n    Keyboard.dismiss();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      setTitle(note.title);\r\n      setDesc(note.desc);\r\n    }\r\n  }, [isEdit]);\r\n\r\n  const handleOnChangeText = (text, valueFor) => {\r\n    if (valueFor === 'title') setTitle(text);\r\n    if (valueFor === 'desc') setDesc(text);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!title.trim() && !desc.trim()) return onClose();\r\n\r\n    if (isEdit) {\r\n      onSubmit(title, desc, Date.now());\r\n    } else {\r\n      onSubmit(title, desc);\r\n      setTitle('');\r\n      setDesc('');\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  const closeModal = () => {\r\n    if (!isEdit) {\r\n      setTitle('');\r\n      setDesc('');\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StatusBar hidden />\r\n      <Modal visible={visible} animationType='fade'>\r\n        <View style={styles.container}>\r\n          <TextInput\r\n            value={title}\r\n            onChangeText={text => handleOnChangeText(text, 'title')}\r\n            placeholder='Title'\r\n            style={[styles.input, styles.title]}\r\n          />\r\n          <TextInput\r\n            value={desc}\r\n            multiline\r\n            placeholder='Note'\r\n            style={[styles.input, styles.desc]}\r\n            onChangeText={text => handleOnChangeText(text, 'desc')}\r\n          />\r\n          <View style={styles.btnContainer}>\r\n            <RoundIconBtn\r\n              size={15}\r\n              antIconName='check'\r\n              onPress={handleSubmit}\r\n            />\r\n            {title.trim() || desc.trim() ? (\r\n              <RoundIconBtn\r\n                size={15}\r\n                style={{ marginLeft: 15 }}\r\n                antIconName='close'\r\n                onPress={closeModal}\r\n              />\r\n            ) : null}\r\n          </View>\r\n        </View>\r\n        <TouchableWithoutFeedback onPress={handleModalClose}>\r\n          <View style={[styles.modalBG, StyleSheet.absoluteFillObject]} />\r\n        </TouchableWithoutFeedback>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 20,\r\n    paddingTop: 15,\r\n  },\r\n  input: {\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: colors.PRIMARY,\r\n    fontSize: 20,\r\n    color: colors.DARK,\r\n  },\r\n  title: {\r\n    height: 40,\r\n    marginBottom: 15,\r\n    fontWeight: 'bold',\r\n  },\r\n  desc: {\r\n    height: 100,\r\n  },\r\n  modalBG: {\r\n    flex: 1,\r\n    zIndex: -1,\r\n  },\r\n  btnContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    paddingVertical: 15,\r\n  },\r\n});\r\n\r\nexport default NoteInputModal;"]},"metadata":{},"sourceType":"module"}