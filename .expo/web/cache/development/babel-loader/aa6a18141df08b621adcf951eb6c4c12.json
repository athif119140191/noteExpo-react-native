{"ast":null,"code":"import { useState, useCallback, useRef, useMemo } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar flashModeOrder = {\n  off: 'on',\n  on: 'auto',\n  auto: 'torch',\n  torch: 'off'\n};\nvar wbOrder = {\n  auto: 'sunny',\n  sunny: 'cloudy',\n  cloudy: 'shadow',\n  shadow: 'fluorescent',\n  fluorescent: 'incandescent',\n  incandescent: 'auto'\n};\n\nvar useToggle = function useToggle(initialState, values) {\n  if (initialState === void 0) {\n    initialState = '';\n  }\n\n  if (values === void 0) {\n    values = [];\n  }\n\n  var _a = useState(initialState),\n      state = _a[0],\n      setState = _a[1];\n\n  return [state, function () {\n    return setState(!values ? function (_state) {\n      return !_state;\n    } : state === values[0] ? values[1] : values[0]);\n  }];\n};\n\nvar useFlash = function useFlash(state) {\n  if (state === void 0) {\n    state = '';\n  }\n\n  var _a = useState(state),\n      flash = _a[0],\n      setFlash = _a[1];\n\n  var toggleFlash = function toggleFlash() {\n    setFlash(flashModeOrder[flash]);\n  };\n\n  return [flash, {\n    toggleFlash: toggleFlash,\n    setFlash: setFlash\n  }];\n};\n\nvar useWhiteBalance = function useWhiteBalance(state) {\n  if (state === void 0) {\n    state = '';\n  }\n\n  var _a = useState(state),\n      whiteBalance = _a[0],\n      setWhiteBalance = _a[1];\n\n  var toggleWB = function toggleWB() {\n    Object.keys(wbOrder).indexOf(whiteBalance);\n    setWhiteBalance(wbOrder[whiteBalance]);\n  };\n\n  return [whiteBalance, {\n    toggleWB: toggleWB,\n    setWhiteBalance: setWhiteBalance\n  }];\n};\n\nvar useAutoFocus = function useAutoFocus(state, toggleModes) {\n  if (state === void 0) {\n    state = '';\n  }\n\n  var _a = useToggle(state, toggleModes),\n      autoFocus = _a[0],\n      toggleAutoFocus = _a[1];\n\n  return [autoFocus, toggleAutoFocus];\n};\n\nvar useToggleFacing = function useToggleFacing(state, toggleModes) {\n  if (state === void 0) {\n    state = '';\n  }\n\n  var _a = useToggle(state, toggleModes),\n      type = _a[0],\n      toggleFacing = _a[1];\n\n  return [type, toggleFacing];\n};\n\nvar initialCameraState = {\n  flash: 'on',\n  zoom: 0,\n  autoFocus: 'on',\n  autoFocusPoint: {\n    normalized: {\n      x: 0.5,\n      y: 0.5\n    },\n    drawRectPosition: {\n      x: Dimensions.get('window').width * 0.5 - 32,\n      y: Dimensions.get('window').height * 0.5 - 32\n    }\n  },\n  focusDepth: 0,\n  type: 'back',\n  whiteBalance: 'auto',\n  ratio: '16:9',\n  isRecording: false,\n  canDetectFaces: false,\n  canDetectText: false,\n  canDetectBarcode: false,\n  faces: [],\n  textBlocks: [],\n  barcodes: []\n};\n\nvar useZoom = function useZoom(state) {\n  if (state === void 0) {\n    state = 0;\n  }\n\n  var _a = useState(state),\n      zoom = _a[0],\n      setZoom = _a[1];\n\n  var zoomIn = function zoomIn() {\n    if (zoom + 0.01 <= 1 && zoom + 0.01 >= 0) {\n      setZoom(zoom + 0.01);\n    }\n  };\n\n  var zoomOut = function zoomOut() {\n    if (zoom - 0.1 <= 1 && zoom - 0.1 >= 0) {\n      setZoom(zoom - 0.1);\n    }\n  };\n\n  return [zoom, {\n    setZoom: setZoom,\n    zoomIn: zoomIn,\n    zoomOut: zoomOut\n  }];\n};\n\nvar useCameraState = function useCameraState(state) {\n  if (state === void 0) {\n    state = {};\n  }\n\n  var _a = useState(state),\n      cameraState = _a[0],\n      setCameraState = _a[1];\n\n  var toggleCameraState = function toggleCameraState(newCameraState) {\n    var _a;\n\n    setCameraState((_a = {}, _a[newCameraState] = !cameraState[newCameraState], _a));\n  };\n\n  return [cameraState, {\n    toggleCameraState: toggleCameraState,\n    setCameraState: setCameraState\n  }];\n};\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nvar defaultPictureTakeOptions = {\n  quality: 0.8,\n  width: undefined,\n  base64: false,\n  doNotSave: false,\n  exif: true,\n  forceUpOrientation: true,\n  fixOrientation: true,\n  orientation: 'portrait'\n};\n\nvar takePicture = function takePicture(_a, options) {\n  var cameraRef = _a.cameraRef;\n\n  if (options === void 0) {\n    options = defaultPictureTakeOptions;\n  }\n\n  return __awaiter(void 0, void 0, Promise, function () {\n    return __generator(this, function (_b) {\n      if (cameraRef && cameraRef.takePictureAsync) {\n        return [2, cameraRef.takePictureAsync(options)];\n      } else if (cameraRef && cameraRef.current && cameraRef.current.takePictureAsync) {\n        return [2, cameraRef.current.takePictureAsync(options)];\n      }\n\n      return [2];\n    });\n  });\n};\n\nvar defaultVideoRecordOptions = {\n  quality: '720p',\n  orientation: 'auto',\n  maxDuration: 5,\n  mute: false,\n  mirrorVideo: false,\n  videoBitrate: 5000000\n};\n\nvar recordVideo = function recordVideo(_a, options) {\n  var cameraRef = _a.cameraRef;\n\n  if (options === void 0) {\n    options = defaultVideoRecordOptions;\n  }\n\n  return __awaiter(void 0, void 0, Promise, function () {\n    return __generator(this, function (_b) {\n      if (cameraRef && cameraRef.recordAsync) {\n        return [2, cameraRef.recordAsync(options)];\n      } else if (cameraRef && cameraRef.current && cameraRef.current.recordAsync) {\n        return [2, cameraRef.current.recordAsync(options)];\n      }\n\n      return [2];\n    });\n  });\n};\n\nvar stopRecording = function stopRecording(_a) {\n  var cameraRef = _a.cameraRef;\n  return __awaiter(void 0, void 0, Promise, function () {\n    return __generator(this, function (_b) {\n      if (cameraRef && cameraRef.stopRecording) {\n        return [2, cameraRef.stopRecording()];\n      } else if (cameraRef && cameraRef.current && cameraRef.current.stopRecording) {\n        return [2, cameraRef.current.stopRecording()];\n      }\n\n      return [2];\n    });\n  });\n};\n\nvar pausePreview = function pausePreview(_a) {\n  var cameraRef = _a.cameraRef;\n  return __awaiter(void 0, void 0, Promise, function () {\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (!(cameraRef && cameraRef.current && cameraRef.current.pausePreview)) return [3, 2];\n          return [4, cameraRef.current.pausePreview()];\n\n        case 1:\n          _b.sent();\n\n          return [2, true];\n\n        case 2:\n          return [2, false];\n      }\n    });\n  });\n};\n\nvar resumePreview = function resumePreview(_a) {\n  var cameraRef = _a.cameraRef;\n  return __awaiter(void 0, void 0, Promise, function () {\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (!(cameraRef && cameraRef.current && cameraRef.current.resumePreview)) return [3, 2];\n          return [4, cameraRef.current.resumePreview()];\n\n        case 1:\n          _b.sent();\n\n          return [2, true];\n\n        case 2:\n          return [2, false];\n      }\n    });\n  });\n};\n\nvar useAutoFocusTouch = function useAutoFocusTouch(state) {\n  if (state === void 0) {\n    state = {};\n  }\n\n  var _a = useState(state),\n      autoFocusPoint = _a[0],\n      setAutoFocusPoint = _a[1];\n\n  var touchToFocus = useCallback(function (event) {\n    var _a = event.nativeEvent,\n        pageX = _a.pageX,\n        pageY = _a.pageY;\n    var screenWidth = Dimensions.get('window').width;\n    var screenHeight = Dimensions.get('window').height;\n    var isPortrait = screenHeight > screenWidth;\n    var x = pageX / screenWidth;\n    var y = pageY / screenHeight;\n\n    if (isPortrait) {\n      x = pageY / screenHeight;\n      y = -(pageX / screenWidth) + 1;\n    }\n\n    setAutoFocusPoint({\n      normalized: {\n        x: x,\n        y: y\n      },\n      drawRectPosition: {\n        x: pageX,\n        y: pageY\n      }\n    });\n  }, []);\n  return [autoFocusPoint, {\n    touchToFocus: touchToFocus,\n    setAutoFocusPoint: setAutoFocusPoint\n  }];\n};\n\nvar useTextRecognition = function useTextRecognition(state) {\n  if (state === void 0) {\n    state = [];\n  }\n\n  var _a = useState(state),\n      textBlocks = _a[0],\n      setTextblocks = _a[1];\n\n  var textRecognized = useCallback(function (data) {\n    setTextblocks(data.textBlocks);\n  }, []);\n  return [textBlocks, {\n    textRecognized: textRecognized\n  }];\n};\n\nvar useFaceDetection = function useFaceDetection(state) {\n  if (state === void 0) {\n    state = [];\n  }\n\n  var _a = useState(state),\n      faces = _a[0],\n      setFaces = _a[1];\n\n  var facesDetected = useCallback(function (data) {\n    setFaces(data.faces);\n  }, []);\n  return [faces, {\n    facesDetected: facesDetected\n  }];\n};\n\nvar useBarcodeDetection = function useBarcodeDetection(state) {\n  if (state === void 0) {\n    state = [];\n  }\n\n  var _a = useState(state),\n      barcodes = _a[0],\n      setBarcodes = _a[1];\n\n  var barcodeRecognized = useCallback(function (data) {\n    setBarcodes(data.barcodes);\n  }, [setBarcodes]);\n  return [barcodes, {\n    barcodeRecognized: barcodeRecognized\n  }];\n};\n\nvar useCamera = function useCamera(cameraOptions) {\n  if (cameraOptions === void 0) {\n    cameraOptions = initialCameraState;\n  }\n\n  var mergedCameraOptions = _extends({}, initialCameraState, cameraOptions);\n\n  var cameraRef = useRef(null);\n\n  var _useToggleFacing = useToggleFacing(mergedCameraOptions.type, ['front', 'back']),\n      type = _useToggleFacing[0],\n      toggleFacing = _useToggleFacing[1];\n\n  var _useFlash = useFlash(mergedCameraOptions.flash),\n      flash = _useFlash[0],\n      _useFlash$ = _useFlash[1],\n      setFlash = _useFlash$.setFlash,\n      toggleFlash = _useFlash$.toggleFlash;\n\n  var _useWhiteBalance = useWhiteBalance(mergedCameraOptions.whiteBalance),\n      whiteBalance = _useWhiteBalance[0],\n      _useWhiteBalance$ = _useWhiteBalance[1],\n      setWhiteBalance = _useWhiteBalance$.setWhiteBalance,\n      toggleWB = _useWhiteBalance$.toggleWB;\n\n  var _useAutoFocus = useAutoFocus(mergedCameraOptions.autoFocus, ['on', 'off']),\n      autoFocus = _useAutoFocus[0],\n      toggleAutoFocus = _useAutoFocus[1];\n\n  var _useAutoFocusTouch = useAutoFocusTouch(mergedCameraOptions.autoFocusPoint),\n      autoFocusPoint = _useAutoFocusTouch[0],\n      _useAutoFocusTouch$ = _useAutoFocusTouch[1],\n      setAutoFocusPoint = _useAutoFocusTouch$.setAutoFocusPoint,\n      touchToFocus = _useAutoFocusTouch$.touchToFocus;\n\n  var _useState = useState(mergedCameraOptions.focusDepth),\n      focusDepth = _useState[0],\n      setFocusDepth = _useState[1];\n\n  var _useCameraState = useCameraState({}),\n      cameraState = _useCameraState[0],\n      _useCameraState$ = _useCameraState[1],\n      setCameraState = _useCameraState$.setCameraState,\n      toggleCameraState = _useCameraState$.toggleCameraState;\n\n  var _useTextRecognition = useTextRecognition([]),\n      textBlocks = _useTextRecognition[0],\n      textRecognized = _useTextRecognition[1].textRecognized;\n\n  var _useFaceDetection = useFaceDetection([]),\n      faces = _useFaceDetection[0],\n      facesDetected = _useFaceDetection[1].facesDetected;\n\n  var _useBarcodeDetection = useBarcodeDetection([]),\n      barcodes = _useBarcodeDetection[0],\n      barcodeRecognized = _useBarcodeDetection[1].barcodeRecognized;\n\n  var _useState2 = useState(mergedCameraOptions.ratio),\n      ratio = _useState2[0],\n      setRatio = _useState2[1];\n\n  var _useState3 = useState(false),\n      isRecording = _useState3[0],\n      setIsRecording = _useState3[1];\n\n  var _useZoom = useZoom(mergedCameraOptions.zoom),\n      zoom = _useZoom[0],\n      _useZoom$ = _useZoom[1],\n      setZoom = _useZoom$.setZoom,\n      zoomIn = _useZoom$.zoomIn,\n      zoomOut = _useZoom$.zoomOut;\n\n  var drawFocusRingPosition = useMemo(function () {\n    return {\n      top: autoFocusPoint.drawRectPosition.y - 32,\n      left: autoFocusPoint.drawRectPosition.x - 32\n    };\n  }, [autoFocusPoint]);\n  return [{\n    cameraRef: cameraRef,\n    type: type,\n    flash: flash,\n    whiteBalance: whiteBalance,\n    autoFocus: autoFocus,\n    autoFocusPoint: autoFocusPoint,\n    zoom: zoom,\n    focusDepth: focusDepth,\n    cameraState: cameraState,\n    drawFocusRingPosition: drawFocusRingPosition,\n    textBlocks: textBlocks,\n    faces: faces,\n    barcodes: barcodes,\n    ratio: ratio,\n    isRecording: isRecording\n  }, {\n    setFlash: setFlash,\n    setWhiteBalance: setWhiteBalance,\n    setZoom: setZoom,\n    setCameraState: setCameraState,\n    setAutoFocusPoint: setAutoFocusPoint,\n    toggleFacing: toggleFacing,\n    toggleFlash: toggleFlash,\n    toggleWB: toggleWB,\n    toggleAutoFocus: toggleAutoFocus,\n    touchToFocus: touchToFocus,\n    zoomIn: zoomIn,\n    zoomOut: zoomOut,\n    setFocusDepth: setFocusDepth,\n    toggleCameraState: toggleCameraState,\n    takePicture: function takePicture$1(options) {\n      return takePicture({\n        cameraRef: cameraRef\n      }, options);\n    },\n    recordVideo: function recordVideo$1(options) {\n      return recordVideo({\n        cameraRef: cameraRef\n      }, options);\n    },\n    stopRecording: function stopRecording$1() {\n      return stopRecording({\n        cameraRef: cameraRef\n      });\n    },\n    pausePreview: pausePreview,\n    isRecording: isRecording,\n    resumePreview: resumePreview,\n    setRatio: setRatio,\n    setIsRecording: setIsRecording,\n    barcodeRecognized: barcodeRecognized,\n    textRecognized: textRecognized,\n    facesDetected: facesDetected\n  }];\n};\n\nexport { initialCameraState, pausePreview, recordVideo, resumePreview, stopRecording, takePicture, useAutoFocus, useAutoFocusTouch, useBarcodeDetection, useCamera, useCameraState, useFaceDetection, useFlash, useTextRecognition, useToggleFacing, useWhiteBalance, useZoom };","map":{"version":3,"sources":["../src/constants.ts","../src/toggle.ts","../src/initialState.ts","../src/misc.ts","../src/takePicture.ts","../src/recordVideo.ts","../src/stopRecording.ts","../src/preview.ts","../src/autofocusTouch.ts","../src/useTextRecognition.ts","../src/useFaceDetection.ts","../src/useBarcodeDetection.ts","../src/hooks.js"],"names":["useCamera","cameraOptions","initialCameraState","mergedCameraOptions","cameraRef","useRef","type","toggleFacing","useToggleFacing","flash","setFlash","toggleFlash","useFlash","whiteBalance","setWhiteBalance","toggleWB","useWhiteBalance","autoFocus","toggleAutoFocus","useAutoFocus","autoFocusPoint","setAutoFocusPoint","touchToFocus","useAutoFocusTouch","focusDepth","setFocusDepth","useState","cameraState","setCameraState","toggleCameraState","useCameraState","textBlocks","textRecognized","useTextRecognition","faces","facesDetected","useFaceDetection","barcodes","barcodeRecognized","useBarcodeDetection","ratio","setRatio","isRecording","setIsRecording","zoom","setZoom","zoomIn","zoomOut","useZoom","drawFocusRingPosition","useMemo","top","left","takePicture","_takePicture","recordVideo","_recordVideo","stopRecording","_stopRecording","pausePreview","resumePreview"],"mappings":"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","sourcesContent":["export const flashModeOrder = {\n  off: 'on',\n  on: 'auto',\n  auto: 'torch',\n  torch: 'off',\n};\n\nexport const wbOrder = {\n  auto: 'sunny',\n  sunny: 'cloudy',\n  cloudy: 'shadow',\n  shadow: 'fluorescent',\n  fluorescent: 'incandescent',\n  incandescent: 'auto',\n};\n","import { useState } from 'react';\nimport { flashModeOrder, wbOrder } from './constants';\n\nconst useToggle = (initialState = '', values = []) => {\n  const [state, setState] = useState(initialState);\n\n  return [\n    state,\n    () =>\n      setState(\n        !values\n          ? _state => !_state\n          : state === values[0]\n          ? values[1]\n          : values[0]\n      ),\n  ];\n};\n\nexport const useFlash = (state = '') => {\n  const [flash, setFlash] = useState<string>(state);\n\n  const toggleFlash = () => {\n    setFlash(flashModeOrder[flash]);\n  };\n\n  return [\n    flash,\n    {\n      toggleFlash,\n      setFlash,\n    },\n  ];\n};\n\nexport const useWhiteBalance = (state = '') => {\n  const [whiteBalance, setWhiteBalance] = useState<string>(state);\n\n  const toggleWB = () => {\n    Object.keys(wbOrder).indexOf(whiteBalance);\n    setWhiteBalance(wbOrder[whiteBalance]);\n  };\n\n  return [\n    whiteBalance,\n    {\n      toggleWB,\n      setWhiteBalance,\n    },\n  ];\n};\n\nexport const useAutoFocus = (state = '', toggleModes) => {\n  const [autoFocus, toggleAutoFocus] = useToggle(state, toggleModes);\n\n  return [autoFocus, toggleAutoFocus];\n};\n\nexport const useToggleFacing = (state = '', toggleModes) => {\n  const [type, toggleFacing] = useToggle(state, toggleModes);\n\n  return [type, toggleFacing];\n};\n","import { Dimensions } from 'react-native';\n\nexport interface CameraOptions {\n  flash?: string | number;\n  zoom?: number;\n  autoFocus?: string | boolean | number;\n  autoFocusPoint?: {\n    normalized: {\n      x: number;\n      y: number;\n    };\n    drawRectPosition: {\n      x: number;\n      y: number;\n    };\n  };\n  focusDepth?: number;\n  type?: string | number;\n  whiteBalance?: number | string;\n  ratio?: string;\n  isRecording?: boolean;\n  canDetectFaces?: boolean;\n  canDetectText?: boolean;\n  canDetectBarcode?: boolean;\n  faces?: any[];\n  textBlocks?: any[];\n  barcodes?: any[];\n}\n\nexport const initialCameraState: CameraOptions = {\n  flash: 'on',\n  zoom: 0,\n  autoFocus: 'on',\n  autoFocusPoint: {\n    normalized: { x: 0.5, y: 0.5 }, // normalized values required for autoFocusPointOfInterest\n    drawRectPosition: {\n      x: Dimensions.get('window').width * 0.5 - 32,\n      y: Dimensions.get('window').height * 0.5 - 32,\n    },\n  },\n  focusDepth: 0,\n  type: 'back',\n  whiteBalance: 'auto',\n  ratio: '16:9',\n\n  isRecording: false,\n  canDetectFaces: false,\n  canDetectText: false,\n  canDetectBarcode: false,\n  faces: [],\n  textBlocks: [],\n  barcodes: [],\n};\n","import { useState } from 'react';\n\nexport const useZoom = (state = 0) => {\n  const [zoom, setZoom] = useState(state);\n\n  const zoomIn = () => {\n    if (zoom + 0.01 <= 1 && zoom + 0.01 >= 0) {\n      setZoom(zoom + 0.01);\n    }\n  };\n\n  const zoomOut = () => {\n    if (zoom - 0.1 <= 1 && zoom - 0.1 >= 0) {\n      setZoom(zoom - 0.1);\n    }\n  };\n\n  return [\n    zoom,\n    {\n      setZoom,\n      zoomIn,\n      zoomOut,\n    },\n  ];\n};\n\nexport const useCameraState = (state = {}) => {\n  const [cameraState, setCameraState] = useState(state);\n\n  const toggleCameraState = newCameraState => {\n    setCameraState({ [newCameraState]: !cameraState[newCameraState] });\n  };\n\n  return [\n    cameraState,\n    {\n      toggleCameraState,\n      setCameraState,\n    },\n  ];\n};\n","export interface TakePictureResponse {\n  width: number;\n  height: number;\n  uri: string;\n  base64?: string;\n  exif?: { [name: string]: any };\n  pictureOrientation: number;\n  deviceOrientation: number;\n}\n\nexport interface TakePictureOptions {\n  quality?: number;\n  orientation?: number | string;\n  base64?: boolean;\n  exif?: boolean;\n  width?: number;\n  mirrorImage?: boolean;\n  doNotSave?: boolean;\n  pauseAfterCapture?: boolean;\n  skipProcessing?: boolean;\n  fixOrientation?: boolean;\n  forceUpOrientation?: boolean;\n}\n\nexport const defaultPictureTakeOptions: TakePictureOptions = {\n  quality: 0.8,\n  width: undefined,\n  base64: false,\n  doNotSave: false,\n  exif: true,\n  forceUpOrientation: true,\n  fixOrientation: true,\n  orientation: 'portrait',\n};\n\nexport const takePicture = async (\n  { cameraRef }: { cameraRef: any },\n  options: TakePictureOptions = defaultPictureTakeOptions\n): Promise<TakePictureResponse | undefined> => {\n  if (cameraRef && cameraRef.takePictureAsync) {\n    return cameraRef.takePictureAsync(options);\n  } else if (\n    cameraRef &&\n    cameraRef.current &&\n    cameraRef.current.takePictureAsync\n  ) {\n    return cameraRef.current.takePictureAsync(options);\n  }\n};\n","export interface RecordResponse {\n  uri: string;\n  videoOrientation: number;\n  deviceOrientation: number;\n  isRecordingInterrupted: boolean;\n  codec: string;\n}\n\nexport interface RecordOptions {\n  quality?: string;\n  orientation?: number | string;\n  maxDuration?: number;\n  maxFileSize?: number;\n  mute?: boolean;\n  mirrorVideo?: boolean;\n  path?: string;\n  videoBitrate?: number;\n  codec?: string;\n}\n\nexport const defaultVideoRecordOptions: RecordOptions = {\n  quality: '720p',\n  orientation: 'auto',\n  maxDuration: 5,\n  mute: false,\n  mirrorVideo: false,\n  videoBitrate: 5000000,\n};\n\nexport const recordVideo = async (\n  { cameraRef }: { cameraRef: any },\n  options: RecordOptions = defaultVideoRecordOptions\n): Promise<RecordResponse | undefined> => {\n  if (cameraRef && cameraRef.recordAsync) {\n    return cameraRef.recordAsync(options);\n  } else if (cameraRef && cameraRef.current && cameraRef.current.recordAsync) {\n    return cameraRef.current.recordAsync(options);\n  }\n};\n","export const stopRecording = async ({\n  cameraRef,\n}: {\n  cameraRef: any;\n}): Promise<any> => {\n  if (cameraRef && cameraRef.stopRecording) {\n    return cameraRef.stopRecording();\n  } else if (\n    cameraRef &&\n    cameraRef.current &&\n    cameraRef.current.stopRecording\n  ) {\n    return cameraRef.current.stopRecording();\n  }\n};\n","export const pausePreview = async ({\n  cameraRef,\n}: {\n  cameraRef: any;\n}): Promise<boolean> => {\n  if (cameraRef && cameraRef.current && cameraRef.current.pausePreview) {\n    await cameraRef.current.pausePreview();\n    return true;\n  }\n  return false;\n};\n\nexport const resumePreview = async ({\n  cameraRef,\n}: {\n  cameraRef: any;\n}): Promise<boolean> => {\n  if (cameraRef && cameraRef.current && cameraRef.current.resumePreview) {\n    await cameraRef.current.resumePreview();\n    return true;\n  }\n  return false;\n};\n","import { useState, useCallback } from 'react';\nimport { Dimensions } from 'react-native';\n\nexport const useAutoFocusTouch = (state = {}) => {\n  const [autoFocusPoint, setAutoFocusPoint] = useState(state);\n\n  const touchToFocus = useCallback(event => {\n    const { pageX, pageY } = event.nativeEvent;\n    const screenWidth = Dimensions.get('window').width;\n    const screenHeight = Dimensions.get('window').height;\n    const isPortrait = screenHeight > screenWidth;\n\n    let x = pageX / screenWidth;\n    let y = pageY / screenHeight;\n\n    // Coordinate transform for portrait. See autoFocusPointOfInterest in docs for more info\n    if (isPortrait) {\n      x = pageY / screenHeight;\n      y = -(pageX / screenWidth) + 1;\n    }\n\n    setAutoFocusPoint({\n      normalized: { x, y },\n      drawRectPosition: { x: pageX, y: pageY },\n    });\n  }, []);\n\n  return [\n    autoFocusPoint,\n    {\n      touchToFocus,\n      setAutoFocusPoint,\n    },\n  ];\n};\n","import { useState, useCallback } from 'react';\n\nexport const useTextRecognition = (state = []) => {\n  const [textBlocks, setTextblocks] = useState(state);\n\n  const textRecognized = useCallback(data => {\n    setTextblocks(data.textBlocks);\n  }, []);\n\n  return [textBlocks, { textRecognized }];\n};\n","import { useState, useCallback } from 'react';\n\nexport const useFaceDetection = (state = []) => {\n  const [faces, setFaces] = useState(state);\n\n  const facesDetected = useCallback(data => {\n    setFaces(data.faces);\n  }, []);\n\n  return [faces, { facesDetected }];\n};\n","import { useState, useCallback } from 'react';\n\nexport const useBarcodeDetection = (state = []) => {\n  const [barcodes, setBarcodes] = useState(state);\n\n  const barcodeRecognized = useCallback(\n    data => {\n      setBarcodes(data.barcodes);\n    },\n    [setBarcodes]\n  );\n\n  return [barcodes, { barcodeRecognized }];\n};\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { useState, useRef, useMemo } from 'react';\nimport {\n  useFlash,\n  useWhiteBalance,\n  useAutoFocus,\n  useToggleFacing,\n} from './toggle.ts';\nimport { initialCameraState } from './initialState.ts';\nimport { useZoom, useCameraState } from './misc';\nimport { takePicture as _takePicture } from './takePicture';\nimport { recordVideo as _recordVideo } from './recordVideo';\nimport { stopRecording as _stopRecording } from './stopRecording';\nimport { pausePreview, resumePreview } from './preview';\nimport { useAutoFocusTouch } from './autofocusTouch';\nimport { useTextRecognition } from './useTextRecognition';\nimport { useFaceDetection } from './useFaceDetection';\nimport { useBarcodeDetection } from './useBarcodeDetection';\n\nexport const useCamera = (cameraOptions = initialCameraState) => {\n  const mergedCameraOptions = {\n    ...initialCameraState,\n    ...cameraOptions,\n  };\n  const cameraRef = useRef(null);\n  const [type, toggleFacing] = useToggleFacing(mergedCameraOptions.type, [\n    'front',\n    'back',\n  ]);\n  const [flash, { setFlash, toggleFlash }] = useFlash(\n    mergedCameraOptions.flash\n  );\n  const [whiteBalance, { setWhiteBalance, toggleWB }] = useWhiteBalance(\n    mergedCameraOptions.whiteBalance\n  );\n  const [\n    autoFocus,\n    toggleAutoFocus,\n  ] = useAutoFocus(mergedCameraOptions.autoFocus, ['on', 'off']);\n  const [\n    autoFocusPoint,\n    { setAutoFocusPoint, touchToFocus },\n  ] = useAutoFocusTouch(mergedCameraOptions.autoFocusPoint);\n  const [focusDepth, setFocusDepth] = useState(mergedCameraOptions.focusDepth);\n  const [cameraState, { setCameraState, toggleCameraState }] = useCameraState(\n    {}\n  );\n  const [textBlocks, { textRecognized }] = useTextRecognition([]);\n  const [faces, { facesDetected }] = useFaceDetection([]);\n  const [barcodes, { barcodeRecognized }] = useBarcodeDetection([]);\n  const [ratio, setRatio] = useState(mergedCameraOptions.ratio);\n  const [isRecording, setIsRecording] = useState(false);\n\n  const [zoom, { setZoom, zoomIn, zoomOut }] = useZoom(\n    mergedCameraOptions.zoom\n  );\n\n  const drawFocusRingPosition = useMemo(\n    () => ({\n      top: autoFocusPoint.drawRectPosition.y - 32,\n      left: autoFocusPoint.drawRectPosition.x - 32,\n    }),\n    [autoFocusPoint]\n  );\n\n  return [\n    {\n      cameraRef,\n      type,\n      flash,\n      whiteBalance,\n      autoFocus,\n      autoFocusPoint,\n      zoom,\n      focusDepth,\n      cameraState,\n      drawFocusRingPosition,\n      textBlocks,\n      faces,\n      barcodes,\n      ratio,\n      isRecording,\n    },\n    {\n      setFlash,\n      setWhiteBalance,\n      setZoom,\n      setCameraState,\n      setAutoFocusPoint,\n      toggleFacing,\n      toggleFlash,\n      toggleWB,\n      toggleAutoFocus,\n      touchToFocus,\n      zoomIn,\n      zoomOut,\n      setFocusDepth,\n      toggleCameraState,\n      takePicture: (options) => _takePicture({ cameraRef }, options),\n      recordVideo: (options) => _recordVideo({ cameraRef }, options),\n      stopRecording: () => _stopRecording({ cameraRef }),\n      pausePreview,\n      isRecording,\n      resumePreview,\n      setRatio,\n      setIsRecording,\n      barcodeRecognized,\n      textRecognized,\n      facesDetected,\n    },\n  ];\n};\n"]},"metadata":{},"sourceType":"module"}