{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { RNCamera } from 'react-native-camera';\nimport { useCamera } from 'react-native-camera-hooks';\nimport CustomButton from \"../utils/CustomButton\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setTasks } from \"../redux/actions\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Camera(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useCamera = useCamera(null),\n      _useCamera2 = _slicedToArray(_useCamera, 2),\n      cameraRef = _useCamera2[0].cameraRef,\n      takePicture = _useCamera2[1].takePicture;\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskReducer;\n  }),\n      tasks = _useSelector.tasks;\n\n  var dispatch = useDispatch();\n\n  var captureHandle = function captureHandle() {\n    var data, filePath;\n    return _regeneratorRuntime.async(function captureHandle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(takePicture());\n\n          case 3:\n            data = _context.sent;\n            filePath = data.uri;\n            updateTask(route.params.id, filePath);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var updateTask = function updateTask(id, path) {\n    var index = tasks.findIndex(function (task) {\n      return task.ID === id;\n    });\n\n    if (index > -1) {\n      var newTasks = _toConsumableArray(tasks);\n\n      newTasks[index].Image = path;\n      AsyncStorage.setItem('Tasks', JSON.stringify(newTasks)).then(function () {\n        dispatch(setTasks(newTasks));\n        Alert.alert('Success!', 'Task image is saved.');\n        navigation.goBack();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  };\n\n  return _jsx(View, {\n    style: styles.body,\n    children: _jsx(RNCamera, {\n      ref: cameraRef,\n      type: RNCamera.Constants.Type.back,\n      style: styles.preview,\n      children: _jsx(CustomButton, {\n        title: \"Capture\",\n        color: \"#1eb900\",\n        onPressFunction: function onPressFunction() {\n          return captureHandle();\n        }\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1\n  },\n  preview: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  }\n});","map":{"version":3,"sources":["D:/ALPro/Smt 6/PAM/noteExpo/app/screens/Camera.js"],"names":["React","RNCamera","useCamera","CustomButton","useDispatch","useSelector","setTasks","AsyncStorage","Camera","navigation","route","cameraRef","takePicture","state","taskReducer","tasks","dispatch","captureHandle","data","filePath","uri","updateTask","params","id","console","log","path","index","findIndex","task","ID","newTasks","Image","setItem","JSON","stringify","then","Alert","alert","goBack","catch","err","styles","body","Constants","Type","back","preview","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    Alert,\r\n} from 'react-native';\r\nimport { RNCamera } from 'react-native-camera';\r\nimport { useCamera } from 'react-native-camera-hooks';\r\nimport CustomButton from '../utils/CustomButton';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setTasks } from '../redux/actions';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function Camera({ navigation, route }) {\r\n\r\n    const [{ cameraRef }, { takePicture }] = useCamera(null);\r\n    const { tasks } = useSelector(state => state.taskReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const captureHandle = async () => {\r\n        try {\r\n            const data = await takePicture();\r\n            const filePath = data.uri;\r\n            updateTask(route.params.id, filePath);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const updateTask = (id, path) => {\r\n        const index = tasks.findIndex(task => task.ID === id);\r\n        if (index > -1) {\r\n            let newTasks = [...tasks];\r\n            newTasks[index].Image = path;\r\n            AsyncStorage.setItem('Tasks', JSON.stringify(newTasks))\r\n                .then(() => {\r\n                    dispatch(setTasks(newTasks));\r\n                    Alert.alert('Success!', 'Task image is saved.');\r\n                    navigation.goBack();\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.body}>\r\n            <RNCamera\r\n                ref={cameraRef}\r\n                type={RNCamera.Constants.Type.back}\r\n                style={styles.preview}\r\n            >\r\n                <CustomButton\r\n                    title=\"Capture\"\r\n                    color='#1eb900'\r\n                    onPressFunction={() => captureHandle()}\r\n                />\r\n            </RNCamera>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    body: {\r\n        flex: 1,\r\n    },\r\n    preview: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}