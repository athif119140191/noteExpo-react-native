{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CustomButton = function CustomButton(props) {\n  return _jsx(Pressable, {\n    onPress: props.onPressFunction,\n    hitSlop: {\n      top: 10,\n      bottom: 10,\n      right: 10,\n      left: 10\n    },\n    android_ripple: {\n      color: '#00000050'\n    },\n    style: function style(_ref) {\n      var pressed = _ref.pressed;\n      return [{\n        backgroundColor: pressed ? '#dddddd' : props.color\n      }, styles.button, _objectSpread({}, props.style)];\n    },\n    children: _jsx(Text, {\n      style: styles.text,\n      children: props.title\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    color: '#ffffff',\n    fontSize: 20,\n    margin: 10,\n    textAlign: 'center'\n  },\n  button: {\n    width: 150,\n    height: 50,\n    alignItems: 'center',\n    borderRadius: 5,\n    margin: 10\n  }\n});\nexport default CustomButton;","map":{"version":3,"sources":["D:/ALPro/Smt 6/PAM/noteExpo/app/components/CustomButton.js"],"names":["React","CustomButton","props","onPressFunction","top","bottom","right","left","color","pressed","backgroundColor","styles","button","style","text","title","StyleSheet","create","fontSize","margin","textAlign","width","height","alignItems","borderRadius"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5B,SACI,KAAC,SAAD;AACI,IAAA,OAAO,EAAEA,KAAK,CAACC,eADnB;AAEI,IAAA,OAAO,EAAE;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,MAAM,EAAE,EAAnB;AAAuBC,MAAAA,KAAK,EAAE,EAA9B;AAAkCC,MAAAA,IAAI,EAAE;AAAxC,KAFb;AAGI,IAAA,cAAc,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAHpB;AAII,IAAA,KAAK,EAAE;AAAA,UAAGC,OAAH,QAAGA,OAAH;AAAA,aAAiB,CACpB;AAAEC,QAAAA,eAAe,EAAED,OAAO,GAAG,SAAH,GAAeP,KAAK,CAACM;AAA/C,OADoB,EAEpBG,MAAM,CAACC,MAFa,oBAGfV,KAAK,CAACW,KAHS,EAAjB;AAAA,KAJX;AAAA,cAUI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA,gBACKZ,KAAK,CAACa;AADX;AAVJ,IADJ;AAgBH,CAjBD;;AAmBA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,IAAI,EAAE;AACFN,IAAAA,KAAK,EAAE,SADL;AAEFU,IAAAA,QAAQ,EAAE,EAFR;AAGFC,IAAAA,MAAM,EAAE,EAHN;AAIFC,IAAAA,SAAS,EAAE;AAJT,GADuB;AAO7BR,EAAAA,MAAM,EAAE;AACJS,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,YAAY,EAAE,CAJV;AAKJL,IAAAA,MAAM,EAAE;AALJ;AAPqB,CAAlB,CAAf;AAgBA,eAAelB,YAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n    Pressable,\r\n    Text,\r\n    StyleSheet,\r\n} from 'react-native';\r\n\r\nconst CustomButton = (props) => {\r\n    return (\r\n        <Pressable\r\n            onPress={props.onPressFunction}\r\n            hitSlop={{ top: 10, bottom: 10, right: 10, left: 10 }}\r\n            android_ripple={{ color: '#00000050' }}\r\n            style={({ pressed }) => [\r\n                { backgroundColor: pressed ? '#dddddd' : props.color },\r\n                styles.button,\r\n                { ...props.style }\r\n            ]}\r\n        >\r\n            <Text style={styles.text}>\r\n                {props.title}\r\n            </Text>\r\n        </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        color: '#ffffff',\r\n        fontSize: 20,\r\n        margin: 10,\r\n        textAlign: 'center',\r\n    },\r\n    button: {\r\n        width: 150,\r\n        height: 50,\r\n        alignItems: 'center',\r\n        borderRadius: 5,\r\n        margin: 10,\r\n    },\r\n})\r\n\r\nexport default CustomButton;"]},"metadata":{},"sourceType":"module"}