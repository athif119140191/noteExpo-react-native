{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport colors from \"../misc/colors\";\nimport RoundIconBtn from \"./RoundIconBtn\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNotes } from \"../contexts/NoteProvider\";\nimport NoteInputModal from \"./NoteInputModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar formatDate = function formatDate(ms) {\n  var date = new Date(ms);\n  var day = date.getDate();\n  var month = date.getMonth() + 1;\n  var year = date.getFullYear();\n  var hrs = date.getHours();\n  var min = date.getMinutes();\n  var sec = date.getSeconds();\n  return day + \"/\" + month + \"/\" + year + \" - \" + hrs + \":\" + min + \":\" + sec;\n};\n\nvar NoteDetail = function NoteDetail(props) {\n  var _useState = useState(props.route.params.note),\n      _useState2 = _slicedToArray(_useState, 2),\n      note = _useState2[0],\n      setNote = _useState2[1];\n\n  var headerHeight = useHeaderHeight();\n\n  var _useNotes = useNotes(),\n      setNotes = _useNotes.setNotes;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showModal = _useState4[0],\n      setShowModal = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isEdit = _useState6[0],\n      setIsEdit = _useState6[1];\n\n  var deleteNote = function deleteNote() {\n    var result, notes, newNotes;\n    return _regeneratorRuntime.async(function deleteNote$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notes'));\n\n          case 2:\n            result = _context.sent;\n            notes = [];\n            if (result !== null) notes = JSON.parse(result);\n            newNotes = notes.filter(function (n) {\n              return n.id !== note.id;\n            });\n            setNotes(newNotes);\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notes', JSON.stringify(newNotes)));\n\n          case 9:\n            props.navigation.goBack();\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var displayDeleteAlert = function displayDeleteAlert() {\n    Alert.alert('Are You Sure!', 'This action will delete your note permanently!', [{\n      text: 'Delete',\n      onPress: deleteNote\n    }, {\n      text: 'No Thanks',\n      onPress: function onPress() {\n        return console.log('no thanks');\n      }\n    }], {\n      cancelable: true\n    });\n  };\n\n  var handleUpdate = function handleUpdate(title, desc, time) {\n    var result, notes, newNotes;\n    return _regeneratorRuntime.async(function handleUpdate$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notes'));\n\n          case 2:\n            result = _context2.sent;\n            notes = [];\n            if (result !== null) notes = JSON.parse(result);\n            newNotes = notes.filter(function (n) {\n              if (n.id === note.id) {\n                n.title = title;\n                n.desc = desc;\n                n.isUpdated = true;\n                n.time = time;\n                setNote(n);\n              }\n\n              return n;\n            });\n            setNotes(newNotes);\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notes', JSON.stringify(newNotes)));\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleOnClose = function handleOnClose() {\n    return setShowModal(false);\n  };\n\n  var openEditModal = function openEditModal() {\n    setIsEdit(true);\n    setShowModal(true);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(ScrollView, {\n      contentContainerStyle: [styles.container, {\n        paddingTop: headerHeight\n      }],\n      children: [_jsx(Text, {\n        style: styles.time,\n        children: note.isUpdated ? \"Updated At \" + formatDate(note.time) : \"Created At \" + formatDate(note.time)\n      }), _jsx(Text, {\n        style: styles.title,\n        children: note.title\n      }), _jsx(Text, {\n        style: styles.desc,\n        children: note.desc\n      })]\n    }), _jsxs(View, {\n      style: styles.btnContainer,\n      children: [_jsx(RoundIconBtn, {\n        antIconName: \"delete\",\n        style: {\n          backgroundColor: colors.ERROR,\n          marginBottom: 15\n        },\n        onPress: displayDeleteAlert\n      }), _jsx(RoundIconBtn, {\n        antIconName: \"edit\",\n        onPress: openEditModal\n      })]\n    }), _jsx(NoteInputModal, {\n      isEdit: isEdit,\n      note: note,\n      onClose: handleOnClose,\n      onSubmit: handleUpdate,\n      visible: showModal\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 15\n  },\n  title: {\n    fontSize: 30,\n    color: colors.PRIMARY,\n    fontWeight: 'bold'\n  },\n  desc: {\n    fontSize: 20,\n    opacity: 0.6\n  },\n  time: {\n    textAlign: 'right',\n    fontSize: 12,\n    opacity: 0.5\n  },\n  btnContainer: {\n    position: 'absolute',\n    right: 15,\n    bottom: 50\n  }\n});\nexport default NoteDetail;","map":{"version":3,"sources":["D:/ALPro/Smt 6/PAM/noteExpo/app/components/NoteDetail.js"],"names":["React","useState","useHeaderHeight","colors","RoundIconBtn","AsyncStorage","useNotes","NoteInputModal","formatDate","ms","date","Date","day","getDate","month","getMonth","year","getFullYear","hrs","getHours","min","getMinutes","sec","getSeconds","NoteDetail","props","route","params","note","setNote","headerHeight","setNotes","showModal","setShowModal","isEdit","setIsEdit","deleteNote","getItem","result","notes","JSON","parse","newNotes","filter","n","id","setItem","stringify","navigation","goBack","displayDeleteAlert","Alert","alert","text","onPress","console","log","cancelable","handleUpdate","title","desc","time","isUpdated","handleOnClose","openEditModal","styles","container","paddingTop","btnContainer","backgroundColor","ERROR","marginBottom","StyleSheet","create","paddingHorizontal","fontSize","color","PRIMARY","fontWeight","opacity","textAlign","position","right","bottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { ScrollView, StyleSheet, Text, View, Alert } from 'react-native';\r\nimport { useHeaderHeight } from '@react-navigation/stack';\r\nimport colors from '../misc/colors';\r\nimport RoundIconBtn from './RoundIconBtn';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useNotes } from '../contexts/NoteProvider';\r\nimport NoteInputModal from './NoteInputModal';\r\n\r\nconst formatDate = ms => {\r\n  const date = new Date(ms);\r\n  const day = date.getDate();\r\n  const month = date.getMonth() + 1;\r\n  const year = date.getFullYear();\r\n  const hrs = date.getHours();\r\n  const min = date.getMinutes();\r\n  const sec = date.getSeconds();\r\n\r\n  return `${day}/${month}/${year} - ${hrs}:${min}:${sec}`;\r\n};\r\n\r\nconst NoteDetail = props => {\r\n  const [note, setNote] = useState(props.route.params.note);\r\n  const headerHeight = useHeaderHeight();\r\n  const { setNotes } = useNotes();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const deleteNote = async () => {\r\n    const result = await AsyncStorage.getItem('notes');\r\n    let notes = [];\r\n    if (result !== null) notes = JSON.parse(result);\r\n\r\n    const newNotes = notes.filter(n => n.id !== note.id);\r\n    setNotes(newNotes);\r\n    await AsyncStorage.setItem('notes', JSON.stringify(newNotes));\r\n    props.navigation.goBack();\r\n  };\r\n\r\n  const displayDeleteAlert = () => {\r\n    Alert.alert(\r\n      'Are You Sure!',\r\n      'This action will delete your note permanently!',\r\n      [\r\n        {\r\n          text: 'Delete',\r\n          onPress: deleteNote,\r\n        },\r\n        {\r\n          text: 'No Thanks',\r\n          onPress: () => console.log('no thanks'),\r\n        },\r\n      ],\r\n      {\r\n        cancelable: true,\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleUpdate = async (title, desc, time) => {\r\n    const result = await AsyncStorage.getItem('notes');\r\n    let notes = [];\r\n    if (result !== null) notes = JSON.parse(result);\r\n\r\n    const newNotes = notes.filter(n => {\r\n      if (n.id === note.id) {\r\n        n.title = title;\r\n        n.desc = desc;\r\n        n.isUpdated = true;\r\n        n.time = time;\r\n\r\n        setNote(n);\r\n      }\r\n      return n;\r\n    });\r\n\r\n    setNotes(newNotes);\r\n    await AsyncStorage.setItem('notes', JSON.stringify(newNotes));\r\n  };\r\n  const handleOnClose = () => setShowModal(false);\r\n\r\n  const openEditModal = () => {\r\n    setIsEdit(true);\r\n    setShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScrollView\r\n        contentContainerStyle={[styles.container, { paddingTop: headerHeight }]}\r\n      >\r\n        <Text style={styles.time}>\r\n          {note.isUpdated\r\n            ? `Updated At ${formatDate(note.time)}`\r\n            : `Created At ${formatDate(note.time)}`}\r\n        </Text>\r\n        <Text style={styles.title}>{note.title}</Text>\r\n        <Text style={styles.desc}>{note.desc}</Text>\r\n      </ScrollView>\r\n      <View style={styles.btnContainer}>\r\n        <RoundIconBtn\r\n          antIconName='delete'\r\n          style={{ backgroundColor: colors.ERROR, marginBottom: 15 }}\r\n          onPress={displayDeleteAlert}\r\n        />\r\n        <RoundIconBtn antIconName='edit' onPress={openEditModal} />\r\n      </View>\r\n      <NoteInputModal\r\n        isEdit={isEdit}\r\n        note={note}\r\n        onClose={handleOnClose}\r\n        onSubmit={handleUpdate}\r\n        visible={showModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // flex: 1,\r\n    paddingHorizontal: 15,\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    color: colors.PRIMARY,\r\n    fontWeight: 'bold',\r\n  },\r\n  desc: {\r\n    fontSize: 20,\r\n    opacity: 0.6,\r\n  },\r\n  time: {\r\n    textAlign: 'right',\r\n    fontSize: 12,\r\n    opacity: 0.5,\r\n  },\r\n  btnContainer: {\r\n    position: 'absolute',\r\n    right: 15,\r\n    bottom: 50,\r\n  },\r\n});\r\n\r\nexport default NoteDetail;"]},"metadata":{},"sourceType":"module"}